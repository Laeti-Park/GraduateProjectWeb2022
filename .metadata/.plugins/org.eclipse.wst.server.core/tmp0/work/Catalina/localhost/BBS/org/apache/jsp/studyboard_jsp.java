/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-05-12 08:58:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bbs.StudyboardDAO;
import bbs.Studyboard;
import java.util.ArrayList;
import java.io.PrintWriter;

public final class studyboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("bbs.StudyboardDAO");
    _jspx_imports_classes.add("bbs.Studyboard");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\r\n");
      out.write("김영원: DB, CSS\r\n");
      out.write("서동학: HTML, 페이지 나누기\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>공부게시판</title>\r\n");
      out.write("<style>\r\n");
      out.write("@font-face {\r\n");
      out.write("  font-family: \"aTitleGothic2\";\r\n");
      out.write("  src: url('fonts/aTitleGothic2.ttf');\r\n");
      out.write("}\r\n");
      out.write("@font-face {\r\n");
      out.write("  font-family: \"aTitleGothic3\";\r\n");
      out.write("  src: url('fonts/aTitleGothic3.ttf');\r\n");
      out.write("}\r\n");
      out.write("@font-face {\r\n");
      out.write("  font-family: \"uninote\";\r\n");
      out.write("  src: url('fonts/UNINOTE.otf');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html {\r\n");
      out.write("	height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	margin: 0px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".top_box {\r\n");
      out.write("	display: flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	color: black;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a.underline:hover {\r\n");
      out.write("	text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul {\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	padding-left: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main_box {\r\n");
      out.write("	width: 1000px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".home {\r\n");
      out.write("	font-size: 40px;\r\n");
      out.write("	margin: 0px auto 15px 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".home a {\r\n");
      out.write("	font-size: 50px;\r\n");
      out.write("	color: #93c9eb;\r\n");
      out.write("	margin: 10px 10px 10xp auto;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	font-weight: 1000;\r\n");
      out.write("	font-family: uninote;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login_box {\r\n");
      out.write("	float: right;\r\n");
      out.write("	padding-top: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu {\r\n");
      out.write("	display: grid;\r\n");
      out.write("	grid-template-columns: 140px 140px 140px 140px 140px;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".submenu {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border: 1px solid #ccc;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("	padding: 5px 2px 5px 2px;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	font-family: aTitleGothic3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".index {\r\n");
      out.write("	background-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".index ul {\r\n");
      out.write("	border: 2px solid #93c9eb;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list {\r\n");
      out.write("	display: grid;\r\n");
      out.write("	grid-template-columns: 100px 1fr 160px 200px;\r\n");
      out.write("	font-family: aTitleGothic2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list_title {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list_wirter {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list_date {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	/* border: 1px solid black; */\r\n");
      out.write("	padding: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bottom_box {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	font-family: aTitleGothic2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".page {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	margin-right: 460px;\r\n");
      out.write("	margin-left: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".page_num {\r\n");
      out.write("	padding-right: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button_box {\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pageNum {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	margin-top: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pageNo {\r\n");
      out.write("	margin-left: 3px;\r\n");
      out.write("	margin-right: 3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".active {\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hr {\r\n");
      out.write("	border: 2px solid #93c9eb;\r\n");
      out.write("	margin-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#background {\r\n");
      out.write("	background-color: #f9f9f9;\r\n");
      out.write("	padding-top: 10px;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");

	int pageNumber = 1;
	if (request.getParameter("pageNumber") != null) {
		pageNumber = Integer.parseInt(request.getParameter("pageNumber"));
	}
	String userID = null;
	if (session.getAttribute("userID") != null) {
		userID = (String) session.getAttribute("userID");
	}

	StudyboardDAO studyboardDAO = new StudyboardDAO();
	int listCount = studyboardDAO.count(); // 현재 게시판의 게시글 개수

	int PAGE_LIMIT = 10; // 한번에 보이는 페이지 수
	int BOARD_LIMIT = 10; // 하나의 페이지에 보이는 게시물 수

	int currentPage = pageNumber;
	int maxPage = (int) Math.ceil(listCount / (double) BOARD_LIMIT); // 표현가능한 마지막 페이지
	// currentPage에 -1을 빼고, 마지막 결과에 +1을 하는 것은, 1과 10페이지에서의 문제 때문이다.
	int startPage = (int) ((currentPage - 1) / PAGE_LIMIT) * PAGE_LIMIT + 1; // 처음 페이지를 구한다
	int endPage = startPage + PAGE_LIMIT - 1; // 마지막 페이지
	if (maxPage < endPage) {
		endPage = maxPage;
	}
	
      out.write("\r\n");
      out.write("	<div class=\"main_box\">\r\n");
      out.write("		<div class=\"top_box\">\r\n");
      out.write("			<div class=\"home\">\r\n");
      out.write("				<p style=\"margin:0;\"><a href='home.jsp'><img src=\"img/LogoColor.png\" alt=\"no image\" height=\"50\" style=\"vertical-align: middle;\"><span style=\"vertical-align: middle;\">UNINOTE</span></a></p>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");

			if (userID == null) {
			
      out.write("\r\n");
      out.write("			<div class=\"login_box\">\r\n");
      out.write("				<form method=\"post\" action=\"loginAction.jsp\">\r\n");
      out.write("					<input type=\"text\" name=\"userID\" placeholder=\"아이디\" maxlength=\"20\">\r\n");
      out.write("					<input type=\"password\" name=\"userPassword\" placeholder=\"비밀번호\" maxlength=\"20\"> <input type=\"submit\" value=\"로그인\">\r\n");
      out.write("					<input type=\"hidden\" name=\"href\" value=\"studyboard\"> <input type=\"button\" value=\"회원가입\" onClick=\"location.href='join.jsp'\">\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			} else {
			
      out.write("\r\n");
      out.write("			<div class=\"login_box\">\r\n");
      out.write("				<input type=\"button\" value=\"로그아웃\" onClick=\"location.replace('logoutAction.jsp?href=studyboard')\">\r\n");
      out.write("				<input type=\"button\" value=\"회원탈퇴\" onClick=\"deleteUser()\">\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"background\">\r\n");
      out.write("		<div class=\"main_box\">\r\n");
      out.write("			<div class=\"menu\">\r\n");
      out.write("				<div class=\"submenu\">\r\n");
      out.write("					<a class=\"underline\" href='noticeAdmin.jsp'>공지사항</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"submenu\">\r\n");
      out.write("					<a class=\"underline\" href='notice.jsp'>자유게시판</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"submenu\">\r\n");
      out.write("					<a class=\"underline\" href='recommendmap.jsp'>추천 로드맵</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"submenu\" style=\"background-color: #93c9eb;\">\r\n");
      out.write("					<a class=\"underline\" href='studyboard.jsp' style=\"color: white;\">공부게시판</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=index>\r\n");
      out.write("				<ul>\r\n");
      out.write("					<div class=\"list\">\r\n");
      out.write("						<li class=\"list_wirter\" style=\"border-right: 2px solid #93c9eb; border-bottom: 2px solid #93c9eb; font-weight: bold;\">번호</li>\r\n");
      out.write("						<li class=\"list_title\" style=\"border-right: 2px solid #93c9eb; border-bottom: 2px solid #93c9eb; font-weight: bold;\">제목</li>\r\n");
      out.write("						<li class=\"list_wirter\" style=\"border-right: 2px solid #93c9eb; border-bottom: 2px solid #93c9eb; font-weight: bold;\">작성자</li>\r\n");
      out.write("						<li class=\"list_date\" style=\"border-bottom: 2px solid #93c9eb; font-weight: bold;\">작성일</li>\r\n");
      out.write("					</div>\r\n");
      out.write("					");

					// 공부게시판의 글만 가져온다
					ArrayList<Studyboard> studyboardList = studyboardDAO.getList(pageNumber);
					for (int i = 0; i < studyboardList.size(); i++) {
						if (i < studyboardList.size() - 1) {
					
      out.write("\r\n");
      out.write("					<div class=\"list\">\r\n");
      out.write("						<li class=\"list_wirter\" style=\"border-right: 2px solid #ccc; border-bottom: 2px solid #ccc;\">");
      out.print(studyboardList.get(i).getStudyboardID());
      out.write("</li>\r\n");
      out.write("						<li class=\"list_title\" style=\"border-right: 2px solid #ccc; border-bottom: 2px solid #ccc;\">\r\n");
      out.write("						<a class=\"underline\" href='post.jsp?category=studyboard&bbsID=");
      out.print(studyboardList.get(i).getStudyboardID());
      out.write('\'');
      out.write('>');
      out.print(studyboardList.get(i).getStudyboardTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("</a></li>\r\n");
      out.write("						<li class=\"list_wirter\" style=\"border-right: 2px solid #ccc; border-bottom: 2px solid #ccc;\">");
      out.print(studyboardList.get(i).getUserID());
      out.write("</li>\r\n");
      out.write("						<li class=\"list_date\" style=\"border-bottom: 2px solid #ccc;\">");
      out.print(studyboardList.get(i).getStudyboardDate().substring(0, 11));
      out.write("</li>\r\n");
      out.write("					</div>\r\n");
      out.write("					");

						} else {
					
      out.write("\r\n");
      out.write("					<div class=\"list\">\r\n");
      out.write("						<li class=\"list_wirter\" style=\"border-right: 2px solid #ccc;\">");
      out.print(studyboardList.get(i).getStudyboardID());
      out.write("</li>\r\n");
      out.write("						<li class=\"list_title\" style=\"border-right: 2px solid #ccc;\">\r\n");
      out.write("						<a class=\"underline\" href='post.jsp?category=studyboard&bbsID=");
      out.print(studyboardList.get(i).getStudyboardID());
      out.write('\'');
      out.write('>');
      out.print(studyboardList.get(i).getStudyboardTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("</a></li>\r\n");
      out.write("						<li class=\"list_wirter\" style=\"border-right: 2px solid #ccc;\">");
      out.print(studyboardList.get(i).getUserID());
      out.write("</li>\r\n");
      out.write("						<li class=\"list_date\">");
      out.print(studyboardList.get(i).getStudyboardDate().substring(0, 11));
      out.write("</li>\r\n");
      out.write("					</div>\r\n");
      out.write("					");

						}
					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"bottom_box\">\r\n");
      out.write("				<div class=page>\r\n");
      out.write("					");

					if (currentPage > 10) { // 현재 페이지가 10보다 클 때 이전 버튼을 활성화, 전 페이지의 가장 마지막 페이지로 이동
						int preNum;
						int x = pageNumber % 10;
						preNum = pageNumber - x;
					
      out.write("\r\n");
      out.write("					<a class=\"page_num\" href='studyboard.jsp?pageNumber=");
      out.print(preNum);
      out.write("'>이전</a>\r\n");
      out.write("					");

					} else {
					
      out.write("\r\n");
      out.write("					<span class=\"page_num\">이전</span>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("					<ul class=\"pageNum\">\r\n");
      out.write("						");

						if (1 != startPage) {
						
      out.write("\r\n");
      out.write("						<li><a href=\"studyboard.jsp?pageNumber=");
      out.print(startPage - 1);
      out.write("\"></a></li>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("						");

						int i = 0;
						for (i = startPage; i <= endPage; i++) {
							if (i == currentPage) {
						
      out.write("\r\n");
      out.write("						<li class=\"active pageNo\"><a class=\"active\">");
      out.print(i);
      out.write("</a></li>\r\n");
      out.write("						");

							} else {
						
      out.write("\r\n");
      out.write("						<li class=\"pageNo\"><a href=\"studyboard.jsp?pageNumber=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</a></li>\r\n");
      out.write("						");

							}
						}
						if (endPage != maxPage) { // endPage와 maxPage가 다르면 endPage+1이 가장 마지막
						
      out.write("\r\n");
      out.write("						<li class=\"pageNo\"><a href=\"studyboard.jsp?pageNumber=");
      out.print(endPage + 1);
      out.write("\"></a></li>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("					</ul>\r\n");
      out.write("					");

					if (maxPage > 10) { // maxPage가 10보다 클 경우만 다음 버튼 활성화, 클릭시 다음의 첫 페이지로 이동
						int postNum;
						int x = pageNumber % 10;
						if (x == 0) x = 10;
						postNum = (pageNumber + 11) - x;
						if ((postNum) <= maxPage) {
					
      out.write("\r\n");
      out.write("					<a class=\"page_num\" href='studyboard.jsp?pageNumber=");
      out.print(postNum);
      out.write("'>다음</a>\r\n");
      out.write("					");

						} else {
					
      out.write("\r\n");
      out.write("					<span class=\"page_num\">다음</span>\r\n");
      out.write("					");

						}
					} else {
					
      out.write("\r\n");
      out.write("					<span class=\"page_num\">다음</span>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				");

				if (userID == null) {
				
      out.write("\r\n");
      out.write("				<div class=\"button_box\">\r\n");
      out.write("					<button onClick=\"alert('로그인 후 시도해주세요.')\" value=\"생성\">생성</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				");

				} else {
				
      out.write("\r\n");
      out.write("				<div class=\"button_box\">\r\n");
      out.write("					<button onClick=\"location.href='write.jsp?category=studyboard'\" value=\"생성\">생성</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		function deleteUser() {\r\n");
      out.write("			if (confirm(\"정말 탈퇴하시겠습니까?\") == true) {\r\n");
      out.write("				location.href = 'deleteUserAction.jsp';\r\n");
      out.write("			} else {\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
