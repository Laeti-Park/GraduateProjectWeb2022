/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-05-12 09:37:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import bbs.Bbs;
import bbs.BbsDAO;

public final class roadmapManual_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("bbs.Bbs");
    _jspx_imports_classes.add("bbs.BbsDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\r\n");
      out.write("김영원: 전체적인 코딩\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>로드맵 사용설명서</title>\r\n");
      out.write("<style>\r\n");
      out.write("@font-face {\r\n");
      out.write("  font-family: \"aTitleGothic2\";\r\n");
      out.write("  src: url('fonts/aTitleGothic2.ttf');\r\n");
      out.write("}\r\n");
      out.write("@font-face {\r\n");
      out.write("  font-family: \"aTitleGothic3\";\r\n");
      out.write("  src: url('fonts/aTitleGothic3.ttf');\r\n");
      out.write("}\r\n");
      out.write("@font-face {\r\n");
      out.write("  font-family: \"uninote\";\r\n");
      out.write("  src: url('fonts/UNINOTE.otf');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html {\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	margin: 0px;\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	color: black;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a.underline:hover {\r\n");
      out.write("	text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul {\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	padding-left: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("	margin-left: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main_box {\r\n");
      out.write("	width: 1000px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".top_box {\r\n");
      out.write("	display: flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".home {\r\n");
      out.write("	font-size: 40px;\r\n");
      out.write("	margin: 0px auto 15px 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".home a {\r\n");
      out.write("	font-size: 50px;\r\n");
      out.write("	color: #93c9eb;\r\n");
      out.write("	font-weight: 1000;\r\n");
      out.write("	font-family: uninote;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login_box {\r\n");
      out.write("	float: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bottom_box {\r\n");
      out.write("	width: 1000px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title_box {\r\n");
      out.write("	width: 1000px;\r\n");
      out.write("	border-bottom: 2px solid #93c9eb;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	font-family: aTitleGothic3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".post_list {\r\n");
      out.write("	display: grid;\r\n");
      out.write("	grid-template-columns: 750px 100px 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".post_title {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	margin-left: 20px;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".post_wirter {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".post_date {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button_box {\r\n");
      out.write("	margin-left: auto;\r\n");
      out.write("	margin-bottom: auto;\r\n");
      out.write("	margin-top: auto;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".article_box {\r\n");
      out.write("	border-bottom: 2px solid #93c9eb;\r\n");
      out.write("	min-height: 70%;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	font-family: aTitleGothic2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".article_box div {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	margin-left: 10px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".article_box div span {\r\n");
      out.write("	margin-left: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bottom_button_box {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: flex-end;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hr {\r\n");
      out.write("	border: 2px solid #93c9eb;\r\n");
      out.write("	margin-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#background {\r\n");
      out.write("	background-color: #f9f9f9;\r\n");
      out.write("	height: auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");

	String userID = null;
	// if user logged-in
	if (session.getAttribute("userID") != null) {
		userID = (String) session.getAttribute("userID");
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"main_box\">\r\n");
      out.write("		<div class=\"top_box\">\r\n");
      out.write("			<div class=\"home\">\r\n");
      out.write("				<p style=\"margin:0;\"><a href='home.jsp'><img src=\"img/LogoColor.png\" alt=\"no image\" height=\"50\" style=\"vertical-align: middle;\"><span style=\"vertical-align: middle;\">UNINOTE</span></a></p>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");

			// if user not logged-in
			if (userID == null) {
			
      out.write("\r\n");
      out.write("			<div class=\"login_box\">\r\n");
      out.write("				<form method=\"post\" action=\"loginAction.jsp\">\r\n");
      out.write("					<input type=\"text\" name=\"userID\" placeholder=\"아이디\" maxlength=\"20\">\r\n");
      out.write("					<input type=\"password\" name=\"userPassword\" placeholder=\"비밀번호\" maxlength=\"20\"> <input type=\"submit\" value=\"로그인\">\r\n");
      out.write("					<input type=\"hidden\" name=\"href\" value=\"roadmapManual\">\r\n");
      out.write("					<input type=\"button\" value=\"회원가입\" onClick=\"location.href='join.jsp'\">\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			// if user logged-in
			} else {
			
      out.write("\r\n");
      out.write("			<div class=\"login_box\">\r\n");
      out.write("				<input type=\"button\" value=\"로그아웃\" onClick=\"location.replace('logoutAction.jsp?href=roadmapManual')\">\r\n");
      out.write("				<input type=\"button\" value=\"회원탈퇴\" onClick=\"deleteUser()\">\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"background\">\r\n");
      out.write("		<div class=\"bottom_box\">\r\n");
      out.write("			<div class=\"title_box\">\r\n");
      out.write("				<ul>\r\n");
      out.write("					<div id=\"postList\" class=\"post_list\">\r\n");
      out.write("						<li class=\"post_title\"><strong>로드맵 사용설명서</strong></li>\r\n");
      out.write("						<li class=\"post_wirter\">Admin</li>\r\n");
      out.write("						<li class=\"post_date\">2022-05-02</li>\r\n");
      out.write("					</div>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- roadmapManual: image with short text -->\r\n");
      out.write("			<div class=\"article_box\">\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/2. grade1_right.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>\r\n");
      out.write("						1. 학년 박스를 우클릭 후 항목 추가를 누르세요. <br>\r\n");
      out.write("						&nbsp;&nbsp; (추가, 삭제, 이동, 추가내용, 업로드는 자동으로 저장됩니다.)\r\n");
      out.write("					</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/3. grade1_create.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>2. 1, 2학년일 경우 왼쪽상단에 새로운 상자가 추가됩니다.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/4. item_DragDrop.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>3. 상자를 드래그해 원하는 위치에 둡니다.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/4.5 item_content.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>4. 상자를 클릭해 활성화한 후 키보드 입력시 내용을 입력할 수 있습니다.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/4.6 item_width.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>5. 상자의 크기를 조절할 수 있습니다.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/4.7 item_parentDrag.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>6. 상자를 드래그해 다른 상자에 둡니다.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/4.8 item_parentDrop.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>7. 상자의 상위상자를 바꿀 수 있습니다.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/5. item_right.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>8. 새로 추가된 상자를 우클릭 후 추가 내용을 누르세요.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/6. popup.PNG\" alt=\"no image\" width=\"300\"> \r\n");
      out.write("					<span>9. 해당 상자에 대한 추가적인 내용을 자세히 설명할 수 있습니다.</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/7. upload.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>\r\n");
      out.write("						10. 상자를 우클릭 후 업/다운로드를 누르세요. <br> \r\n");
      out.write("						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zip, pptx, hwp, jpg, png 파일을 업로드 할 수 있습니다.\r\n");
      out.write("					</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<img src=\"img/8. download.PNG\" alt=\"no image\" width=\"300\">\r\n");
      out.write("					<span>\r\n");
      out.write("						11. 파일 관리를 누르면 다운로드 페이지로 이동합니다. <br>\r\n");
      out.write("						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 해당 상자에 업로드된 파일을 다운로드 할 수 있습니다.\r\n");
      out.write("					</span>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		// deleteUserAction\r\n");
      out.write("		function deleteUser() {\r\n");
      out.write("			if (confirm(\"정말 탈퇴하시겠습니까?\") == true) {\r\n");
      out.write("				location.href = 'deleteUserAction.jsp';\r\n");
      out.write("			} else {\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
