/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-05-13 04:33:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import map.CountsDAO;
import java.io.PrintWriter;
import java.util.ArrayList;
import bbs.BbsDAO;
import bbs.Bbs;
import bbs.NoticeDAO;
import bbs.Notice;
import bbs.StudyboardDAO;
import bbs.Studyboard;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("bbs.Bbs");
    _jspx_imports_classes.add("bbs.Notice");
    _jspx_imports_classes.add("bbs.BbsDAO");
    _jspx_imports_classes.add("map.CountsDAO");
    _jspx_imports_classes.add("bbs.NoticeDAO");
    _jspx_imports_classes.add("bbs.StudyboardDAO");
    _jspx_imports_classes.add("bbs.Studyboard");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write("김영원: HTML, CSS\n");
      out.write("서동학: 로그인, 로그아웃, 회원가입, 회원탈퇴, category\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<title>home</title>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("@font-face {\n");
      out.write("  font-family: \"aTitleGothic2\";\n");
      out.write("  src: url('fonts/aTitleGothic2.ttf');\n");
      out.write("}\n");
      out.write("@font-face {\n");
      out.write("  font-family: \"aTitleGothic3\";\n");
      out.write("  src: url('fonts/aTitleGothic3.ttf');\n");
      out.write("}\n");
      out.write("@font-face {\n");
      out.write("  font-family: \"uninote\";\n");
      out.write("  src: url('fonts/UNINOTE.otf');\n");
      out.write("}\n");
      out.write("\n");
      out.write("html {\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("	margin: 0;\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main_box {\n");
      out.write("	width: 1400px;\n");
      out.write("	margin: 0px auto 0px auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top_box {\n");
      out.write("	display: flex;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".home {\n");
      out.write("	width: 40%;\n");
      out.write("	margin: 0px 0px 10px 10%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".home a {\n");
      out.write("	font-size: 50px;\n");
      out.write("	color: #93c9eb;\n");
      out.write("	text-decoration: none;\n");
      out.write("	font-weight: 1000;\n");
      out.write("	font-family: uninote;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".login_box {\n");
      out.write("	float: right;\n");
      out.write("	margin: 10px 0px 10px auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#id {\n");
      out.write("	margin-left: auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box {\n");
      out.write("	display: flex;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box>div {\n");
      out.write("	width: 40%;\n");
      out.write("	margin: 10px 0px 10px auto;\n");
      out.write("	padding: 5px 0px 5px 5px;\n");
      out.write("	border: solid #828282;\n");
      out.write("	background-color: white;\n");
      out.write("	border-radius: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box>div h2 {\n");
      out.write("	text-align: center;\n");
      out.write("	margin: 2px 0px;\n");
      out.write("	font-family: aTitleGothic3;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box>div h2 a {\n");
      out.write("	text-decoration: none;\n");
      out.write("	color: #464646;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box>div ul {\n");
      out.write("	margin-top: 10px;\n");
      out.write("	margin-bottom: 10px;\n");
      out.write("	padding-left: 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box>div li {\n");
      out.write("	list-style-position: inside;\n");
      out.write("	list-style: circle;\n");
      out.write("	padding: 5px 0px 5px 5px;\n");
      out.write("	margin: 0px;\n");
      out.write("	font-family: aTitleGothic2;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box>div ul a {\n");
      out.write("	display: block;\n");
      out.write("	text-decoration: none;\n");
      out.write("	color: inherit;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row_box>div ul a:hover {\n");
      out.write("	text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notice_box, .community_box, .mymap_box, .goodmap_box, .job_box, .none_box {\n");
      out.write("	min-height: 178px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("hr {\n");
      out.write("	border: 2px solid #93c9eb;\n");
      out.write("	margin-bottom: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#background {\n");
      out.write("	background-color: #f9f9f9;\n");
      out.write("	padding-top: 15px;\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".underline {\n");
      out.write("   width: auto; \n");
      out.write("   text-overflow: ellipsis; \n");
      out.write("   white-space: nowrap;\n");
      out.write("   overflow: hidden;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	");

	String userID = null;
	int pageNumber = 1;
	// if user logged-in
	if (session.getAttribute("userID") != null) {
		userID = (String) session.getAttribute("userID");
	}
	
      out.write("\n");
      out.write("	<div class=\"main_box\">\n");
      out.write("		<div class=\"top_box\">\n");
      out.write("			<div class=\"home\">\n");
      out.write("				<p style=\"margin:0;\"><a href='home.jsp'><img src=\"img/LogoColor.png\" alt=\"no image\" height=\"50\" style=\"vertical-align: middle;\"><span style=\"vertical-align: middle;\">UNINOTE</span></a></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			");

			// if user not logged-in
			if (userID == null) {
			
      out.write("\n");
      out.write("			<div class=\"login_box\">\n");
      out.write("				<form method=\"post\" action=\"loginAction.jsp\">\n");
      out.write("					<input type=\"text\" name=\"userID\" placeholder=\"아이디\" maxlength=\"20\">\n");
      out.write("					<input type=\"password\" name=\"userPassword\" placeholder=\"비밀번호\" maxlength=\"20\"> <input type=\"submit\" value=\"로그인\">\n");
      out.write("					<input type=\"hidden\" name=\"href\" value=\"home\"> \n");
      out.write("					<input type=\"button\" value=\"회원가입\" onClick=\"location.href='join.jsp'\">\n");
      out.write("				</form>\n");
      out.write("			</div>\n");
      out.write("			");

			// if user logged-in
			} else {
			
      out.write("\n");
      out.write("			<div class=\"login_box\">\n");
      out.write("				<input type=\"button\" value=\"로그아웃\" onClick=\"location.replace('logoutAction.jsp?href=home')\"> \n");
      out.write("				<input type=\"button\" value=\"회원탈퇴\" onClick=\"deleteUser()\">\n");
      out.write("			</div>\n");
      out.write("			");

			}
			
      out.write("\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<hr>\n");
      out.write("\n");
      out.write("	<div id=\"background\">\n");
      out.write("		<div class=\"main_box\">\n");
      out.write("			<div class=\"row_box\">\n");
      out.write("				<div class=\"notice_box\">\n");
      out.write("					<h2>\n");
      out.write("						<!-- goto noticeAdmin -->\n");
      out.write("						<a href=\"noticeAdmin.jsp\">공지사항</a>\n");
      out.write("					</h2>\n");
      out.write("					<ul>\n");
      out.write("						");

						pageNumber = 1;
						NoticeDAO noticeDAO = new NoticeDAO();
						ArrayList<Notice> noticeList = noticeDAO.getList(pageNumber);
						// if noticeAdmin posts are over 4
						// show by recently
						if (3 < noticeList.size()) {
							for (int i = 0; i < 4; i++) {
						
      out.write("\n");
      out.write("						<li>\n");
      out.write("							<a class=\"underline\" href='post.jsp?category=noticeAdmin&bbsID=");
      out.print(noticeList.get(i).getNoticeID());
      out.write("'>\n");
      out.write("							");
      out.print(noticeList.get(i).getNoticeTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("\n");
      out.write("							</a>\n");
      out.write("						</li>\n");
      out.write("						");

						}
						// if noticeAdmin posts are under 4
						// show by recently
						} else {
						int blank = 4 - noticeList.size();
						for (int i = 0; i < noticeList.size(); i++) {
						
      out.write("\n");
      out.write("						<li>\n");
      out.write("							<a class=\"underline\" href='post.jsp?category=noticeAdmin&bbsID=");
      out.print(noticeList.get(i).getNoticeID());
      out.write("'>\n");
      out.write("							");
      out.print(noticeList.get(i).getNoticeTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("\n");
      out.write("							</a>\n");
      out.write("						</li>\n");
      out.write("						");

						}
						}
						
      out.write("\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("				<div class=\"mymap_box\">\n");
      out.write("					<h2>\n");
      out.write("						<!-- goto myMap -->\n");
      out.write("						<a href=\"javascript:checkLogin();\">My 로드맵</a>\n");
      out.write("					</h2>\n");
      out.write("					<ul>\n");
      out.write("						<li><a href=\"javascript:checkLogin();\">My 로드맵</a></li>\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"row_box\">\n");
      out.write("				<div class=\"community_box\">\n");
      out.write("					<h2>\n");
      out.write("						<!-- goto notice -->\n");
      out.write("						<a href=\"notice.jsp\">자유게시판</a>\n");
      out.write("					</h2>\n");
      out.write("					<ul>\n");
      out.write("						");

						pageNumber = 1;
						BbsDAO bbsDAO = new BbsDAO();
						ArrayList<Bbs> bbsList = bbsDAO.getList(pageNumber);
						// if notice(bbs) posts are over 4
						// show by recently
						if (3 < bbsList.size()) {
							for (int i = 0; i < 4; i++) {
						
      out.write("\n");
      out.write("						<li>\n");
      out.write("							<a class=\"underline\" href='post.jsp?category=notice&bbsID=");
      out.print(bbsList.get(i).getBbsID());
      out.write("'>\n");
      out.write("							");
      out.print(bbsList.get(i).getBbsTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("\n");
      out.write("							</a>\n");
      out.write("						</li>\n");
      out.write("						");

						}
						// if notice(bbs) posts are under 4
						// show by recently
						} else {
						int blank = 4 - bbsList.size();
						for (int i = 0; i < bbsList.size(); i++) {
						
      out.write("\n");
      out.write("						<li>\n");
      out.write("							<a class=\"underline\" href='post.jsp?category=notice&bbsID=");
      out.print(bbsList.get(i).getBbsID());
      out.write("'>\n");
      out.write("							");
      out.print(bbsList.get(i).getBbsTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("\n");
      out.write("							</a>\n");
      out.write("						</li>\n");
      out.write("						");

						}
						}
						
      out.write("\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div class=\"goodmap_box\">\n");
      out.write("					<h2>\n");
      out.write("						<!-- goto recommendMap -->\n");
      out.write("						<a href=\"recommendmap.jsp?pageNumber=1&selected=public\">추천 로드맵</a>\n");
      out.write("					</h2>\n");
      out.write("					<ul>\n");
      out.write("						");

						CountsDAO countsDAO = new CountsDAO();
						ArrayList<String> mapList = countsDAO.getHomeList();
						// show by most likely
						for (int i = 0; i < mapList.size(); i++) {
						
      out.write("\n");
      out.write("						<li><a href=\"map.jsp?userID=");
      out.print(mapList.get(i));
      out.write('"');
      out.write('>');
      out.print(mapList.get(i));
      out.write("의로드맵</a></li>\n");
      out.write("						");

						}
						
      out.write("\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("			<div class=\"row_box\">\n");
      out.write("				<div class=\"job_box\">\n");
      out.write("					<h2>\n");
      out.write("						<!-- goto studyboard -->\n");
      out.write("						<a href=\"studyboard.jsp\">공부게시판</a>\n");
      out.write("					</h2>\n");
      out.write("					<ul>\n");
      out.write("						");

						pageNumber = 1;
						StudyboardDAO studyboardDAO = new StudyboardDAO();
						ArrayList<Studyboard> studyboardList = studyboardDAO.getList(pageNumber);
						// if studyboard posts are over 4
						// show by recently
						if (3 < studyboardList.size()) {
							for (int i = 0; i < 4; i++) {
						
      out.write("\n");
      out.write("						<li>\n");
      out.write("							<a class=\"underline\" href='post.jsp?category=studyboard&bbsID=");
      out.print(studyboardList.get(i).getStudyboardID());
      out.write("'>\n");
      out.write("							");
      out.print(studyboardList.get(i).getStudyboardTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("\n");
      out.write("							</a>\n");
      out.write("						</li>\n");
      out.write("						");

						}
						// if studyboard posts are under 4
						// show by recently
						} else {
						int blank = 4 - studyboardList.size();
						for (int i = 0; i < studyboardList.size(); i++) {
						
      out.write("\n");
      out.write("						<li>\n");
      out.write("							<a class=\"underline\" href='post.jsp?category=studyboard&bbsID=");
      out.print(studyboardList.get(i).getStudyboardID());
      out.write("'>\n");
      out.write("							");
      out.print(studyboardList.get(i).getStudyboardTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("\n");
      out.write("							</a>\n");
      out.write("						</li>\n");
      out.write("						");

						}
						}
						
      out.write("\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div class=\"roadmapManual_box\">\n");
      out.write("					<h2>\n");
      out.write("						<!-- goto roadmapManual -->\n");
      out.write("						<a href=\"roadmapManual.jsp\">로드맵 사용설명서</a>\n");
      out.write("					</h2>\n");
      out.write("					<ul>\n");
      out.write("						<li><a href=\"roadmapManual.jsp\">로드맵 사용설명서</a></li>\n");
      out.write("					</ul>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("	   // check before delete user, everything\n");
      out.write("       function deleteUser() {\n");
      out.write("          if(confirm(\"정말 탈퇴하시겠습니까?\")==true){\n");
      out.write("             location.href='deleteUserAction.jsp';\n");
      out.write("          } else{\n");
      out.write("             return false;\n");
      out.write("          }\n");
      out.write("       }\n");
      out.write("       \n");
      out.write("	   // check login before go myMap\n");
      out.write("       function checkLogin() {\n");
      out.write("           var userID = '");
      out.print(userID);
      out.write("';\n");
      out.write("			if (userID != 'null') {\n");
      out.write("				location.href = \"map.jsp?userID=\" + userID + \"&myLink=yes\";\n");
      out.write("			} else {\n");
      out.write("				alert('로그인을 해주세요.');\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("	</script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
