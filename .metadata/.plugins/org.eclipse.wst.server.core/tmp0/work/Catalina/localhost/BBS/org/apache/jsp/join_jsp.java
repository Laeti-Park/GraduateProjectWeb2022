/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-05-13 04:34:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import user.UserDAO;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("user.UserDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\r\n");
      out.write("서동학: 전체적인 코딩\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<!-- emailJS 사이트를 사용하여 이메일을 보낸다 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/emailjs-com@3/dist/email.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("   (function() {\r\n");
      out.write("      emailjs.init(\"user_7jWqZksGUyrF8RSOsS3Xu\");\r\n");
      out.write("   })();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body, html {\r\n");
      out.write("   margin: 0;\r\n");
      out.write("   width: 100%;\r\n");
      out.write("   height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main_box {\r\n");
      out.write("   width: 30%;\r\n");
      out.write("   height: 100%;\r\n");
      out.write("   margin: 0 auto;\r\n");
      out.write("   overflow: hidden;\r\n");
      out.write("   background-color: #f9f9f9;\r\n");
      out.write("   padding: 0px 15px 0px 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main_box input {\r\n");
      out.write("   width: 100%;\r\n");
      out.write("   padding: 10px 14px 10px 14px;\r\n");
      out.write("   box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".authNo {\r\n");
      out.write("   margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btnJoin {\r\n");
      out.write("   width: 100%;\r\n");
      out.write("   margin-top: 10px;\r\n");
      out.write("   font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#idLabel {\r\n");
      out.write("   margin-top: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#getAuthNo {\r\n");
      out.write("   margin-left: 25px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#authNo {\r\n");
      out.write("   width: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#authck {\r\n");
      out.write("   width: 23%;\r\n");
      out.write("   margin-left: 25px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#userID {\r\n");
      out.write("   width: 70%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#idCheck {\r\n");
      out.write("   width: 23%;\r\n");
      out.write("   margin-left: 25px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#background {\r\n");
      out.write("   background-color: #f9f9f9;\r\n");
      out.write("   height: 100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("   <script src=\"http://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("   <div id=\"background\">\r\n");
      out.write("      <div class=\"main_box\">\r\n");
      out.write("         <form method=\"post\" action=\"joinAction.jsp\" onsubmit=\"return check()\">\r\n");
      out.write("            <h3 id=\"idLabel\">\r\n");
      out.write("               <label for=\"id\">아이디</label>\r\n");
      out.write("            </h3>\r\n");
      out.write("            <div class=\"id_box\">\r\n");
      out.write("               <input id=\"userID\" type=\"text\" name=\"userID\" maxlength=\"20\" placeholder=\"최대 20자\" onkeyup=\"characterCheck(this)\" onkeydown=\"characterCheck(this)\">\r\n");
      out.write("               <button type=\"button\" id=\"idCheck\" onclick=\"IDCheck()\">중복 확인</button><br>\r\n");
      out.write("               <span id=\"id_span\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <h3>\r\n");
      out.write("               <label for=\"pw\">비밀번호</label>\r\n");
      out.write("            </h3>\r\n");
      out.write("            <div class=\"pw_box\">\r\n");
      out.write("               <input id=\"pw\" type=\"password\" name=\"userPassword\" maxlength=\"20\" placeholder=\"최대 20자\" onchange=\"passwordCheck()\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <h3>\r\n");
      out.write("               <label for=\"pwck\">비밀번호 확인</label>\r\n");
      out.write("            </h3>\r\n");
      out.write("            <div class=\"pwck_box\">\r\n");
      out.write("               <input id=\"pwck\" type=\"password\" name=\"pwck\" maxlength=\"20\" placeholder=\"최대 20자\" onchange=\"passwordCheck()\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div style=\"height: 15px\">\r\n");
      out.write("               <span id=\"same_ck\" style=\"font-size: 14px\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <h3>\r\n");
      out.write("               <label for=\"name\">이름</label>\r\n");
      out.write("            </h3>\r\n");
      out.write("            <div class=\"name_box\">\r\n");
      out.write("               <input id=\"name_id\" type=\"text\" name=\"userName\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <h3>\r\n");
      out.write("               <label for=\"email\">이메일</label>\r\n");
      out.write("            </h3>\r\n");
      out.write("            <div class=\"email_box\">\r\n");
      out.write("               <input id=\"email_id\" type=\"email\" name=\"userEmail\" placeholder=\"이메일\">\r\n");
      out.write("               <button id=\"email_btn\" type=\"button\" onclick=\"emailMove()\">인증번호받기</button>\r\n");
      out.write("               <button style=\"display: none\" id=\"email_form_btn\" type=\"submit\" form=\"contact-form\">인증번호보내기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"authck_box\">\r\n");
      out.write("               <input type=\"tel\" name=\"authNo\" class=\"authNo\" id=\"authNo\" placeholder=\"인증번호 입력\">\r\n");
      out.write("               <button type=\"button\" id=\"authck\" onclick=\"authCk(getauthNo())\">인증번호 확인</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <input type=\"submit\" name=\"btnJoin\" class=\"btnJoin\" id=\"btnJoin\" value='가입하기' disabled>\r\n");
      out.write("         </form>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("   <!-- 이메일 발송 폼 -->\r\n");
      out.write("   <form id=\"contact-form\">\r\n");
      out.write("      <input style=\"display: none\" id=\"name_id_form\" type=\"text\" name=\"name\">\r\n");
      out.write("      <input style=\"display: none\" id=\"email_id_form\" type=\"email\"\r\n");
      out.write("         name=\"email\" placeholder=\"이메일\"> <input type=\"hidden\"\r\n");
      out.write("         name=\"contact_number\">\r\n");
      out.write("      <textarea style=\"display: none\" id=\"message\" name=\"message\"></textarea>\r\n");
      out.write("   </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <script>\r\n");
      out.write("      // 비밀번호 확인 변수\r\n");
      out.write("      var pwck = false;\r\n");
      out.write("      // 아이디 중복 확인을 했는지 확인하는 변수\r\n");
      out.write("      var idck = false;\r\n");
      out.write("      // 인증번호를 저장하는 변수\r\n");
      out.write("      var authcode;\r\n");
      out.write("      \r\n");
      out.write("      // 특수문자 입력 방지\r\n");
      out.write("      function characterCheck(obj){\r\n");
      out.write("      var regExp = /[ \\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+┼<>@#$%&\\'\\\"\\\\\\(\\=]/gi; \r\n");
      out.write("      if( regExp.test(obj.value) ){\r\n");
      out.write("         document.getElementById(\"id_span\").innerHTML = \"특수문자는 사용할 수 없습니다\";\r\n");
      out.write("         document.getElementById(\"id_span\").style.color = \"red\";\r\n");
      out.write("         obj.value = obj.value.substring( 0 , obj.value.length - 1 ); // 입력한 특수문자 한자리 지움\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      function check() {\r\n");
      out.write("         if(idck==false){\r\n");
      out.write("            alert(\"아이디를 확인해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("         }\r\n");
      out.write("         else if(pwck==false){\r\n");
      out.write("            alert(\"비밀번호를 확인해주세요.\");\r\n");
      out.write("            return false;\r\n");
      out.write("         }\r\n");
      out.write("         else if(idck==true&&pwck==true){\r\n");
      out.write("            return true;\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function emailMove() {\r\n");
      out.write("         emailSend()\r\n");
      out.write("         document.getElementById(\"name_id_form\").value = document.getElementById(\"name_id\").value;\r\n");
      out.write("         document.getElementById(\"email_id_form\").value = document.getElementById(\"email_id\").value;\r\n");
      out.write("         document.getElementById(\"email_form_btn\").click();\r\n");
      out.write("         alert(\"인증번호가 발송되었습니다.\");\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      //6자리 난수 생성\r\n");
      out.write("      function generateRandomCode() {\r\n");
      out.write("         let str = '';\r\n");
      out.write("         for (let i = 0; i < 6; i++) {\r\n");
      out.write("            str += Math.floor(Math.random() * 10);\r\n");
      out.write("         }\r\n");
      out.write("         return str;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function emailSend() {\r\n");
      out.write("         //인증번호 생성\r\n");
      out.write("         authcode = generateRandomCode();\r\n");
      out.write("         document.getElementById(\"message\").value = authcode;\r\n");
      out.write("\r\n");
      out.write("         document.getElementById('contact-form').addEventListener('submit', function(event) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("            this.contact_number.value = Math.random() * 100000 | 0;\r\n");
      out.write("            emailjs.sendForm('service_5gv5vso', 'template_xsxf4tb', this).then(function() {\r\n");
      out.write("               console.log('SUCCESS!');\r\n");
      out.write("            }, function(error) {\r\n");
      out.write("               console.log('FAILED...', error);\r\n");
      out.write("            });\r\n");
      out.write("         });\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 인증번호 체크\r\n");
      out.write("      function authCk(code) {\r\n");
      out.write("         const btn = document.getElementById(\"authck\");\r\n");
      out.write("         if (code == authcode) {\r\n");
      out.write("            document.getElementById('authNo').disabled = true;\r\n");
      out.write("            document.getElementById('authck').disabled = true;\r\n");
      out.write("            document.getElementById('btnJoin').disabled = false;\r\n");
      out.write("            document.getElementById('btnJoin').style.backgroundColor = \"#93c9eb\";\r\n");
      out.write("            document.getElementById('btnJoin').style.borderColor = \"gray\";\r\n");
      out.write("            alert(\"인증되었습니다.\");\r\n");
      out.write("         } else {\r\n");
      out.write("            alert(\"인증번호가 일치하지 않습니다.\");\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function getauthNo() {\r\n");
      out.write("         var authno = document.getElementById(\"authNo\").value;\r\n");
      out.write("         return authno;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 비밀번호 확인\r\n");
      out.write("      function passwordCheck() {\r\n");
      out.write("         if (document.getElementById(\"pw\").value != \"\" && document.getElementById(\"pwck\").value != \"\") {\r\n");
      out.write("            if (document.getElementById(\"pw\").value == document.getElementById(\"pwck\").value) {\r\n");
      out.write("               pwck = true;\r\n");
      out.write("               document.getElementById('same_ck').innerHTML = \"비밀번호가 일치합니다.\";\r\n");
      out.write("               document.getElementById('same_ck').style.color = 'blue';\r\n");
      out.write("            } else {\r\n");
      out.write("               pwck = false;\r\n");
      out.write("               document.getElementById('same_ck').innerHTML = \"비밀번호가 일치하지 않습니다.\";\r\n");
      out.write("               document.getElementById('same_ck').style.color = 'red';\r\n");
      out.write("            }\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // id 중복 확인 관련\r\n");
      out.write("      var request = new XMLHttpRequest();\r\n");
      out.write("\r\n");
      out.write("      function IDCheck() {\r\n");
      out.write("         var userID = document.getElementById(\"userID\").value;\r\n");
      out.write("         var data_rtn;\r\n");
      out.write("         if (userID == \"\" || userID==null || userID==\"null\") {\r\n");
      out.write("            alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("         request.open(\"Post\", \"./UserIDServlet?userID=\" + encodeURIComponent(userID), true);\r\n");
      out.write("         request.onreadystatechange = checkProcess;\r\n");
      out.write("         request.send(null);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 아이디 체크 결과에 따라 id_span의 내용을 변경\r\n");
      out.write("      function checkProcess() {\r\n");
      out.write("         var userID = document.getElementById(\"userID\").value;\r\n");
      out.write("         if (request.readyState == 4 && request.status == 200) {\r\n");
      out.write("            var object = eval('(' + request.responseText + ')');\r\n");
      out.write("            if (object == -1 && userID!=null && userID!=\"\" && userID!=\"null\") {\r\n");
      out.write("               document.getElementById(\"id_span\").innerHTML = \"사용 가능한 아이디입니다\";\r\n");
      out.write("               document.getElementById(\"id_span\").style.color = \"blue\";\r\n");
      out.write("               idck = true;\r\n");
      out.write("            } else if (object == 1) {\r\n");
      out.write("               document.getElementById(\"id_span\").innerHTML = \"이미 사용중인 아이디입니다\";\r\n");
      out.write("               document.getElementById(\"id_span\").style.color = \"red\";\r\n");
      out.write("               idck = false;\r\n");
      out.write("            }\r\n");
      out.write("         }\r\n");
      out.write("      }\r\n");
      out.write("   </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
