/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-05-20 07:25:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import file.FileDAO;
import file.FileDTO;
import java.io.File;
import map.PublicmapDAO;
import java.io.PrintWriter;
import java.util.ArrayList;
import map.Item;
import map.ItemDAO;
import map.Line;
import map.LineDAO;
import map.Counts;
import map.CountsDAO;
import user.User;
import user.UserDAO;

public final class map_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("map.Line");
    _jspx_imports_classes.add("map.Item");
    _jspx_imports_classes.add("map.Counts");
    _jspx_imports_classes.add("file.FileDAO");
    _jspx_imports_classes.add("user.UserDAO");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("map.LineDAO");
    _jspx_imports_classes.add("user.User");
    _jspx_imports_classes.add("map.PublicmapDAO");
    _jspx_imports_classes.add("map.CountsDAO");
    _jspx_imports_classes.add("map.ItemDAO");
    _jspx_imports_classes.add("file.FileDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\r\n");
      out.write("김영원: 전체적인 코딩, CSS\r\n");
      out.write("서동학: note, upload, download\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>My 로드맵</title>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("	  @font-face {\r\n");
      out.write("	    font-family: \"aTitleGothic2\";\r\n");
      out.write("	    src: url('fonts/aTitleGothic2.ttf');\r\n");
      out.write("	  }\r\n");
      out.write("	  @font-face {\r\n");
      out.write("	    font-family: \"aTitleGothic3\";\r\n");
      out.write("	    src: url('fonts/aTitleGothic3.ttf');\r\n");
      out.write("	  }\r\n");
      out.write("	  @font-face {\r\n");
      out.write("	    font-family: \"uninote\";\r\n");
      out.write("	    src: url('fonts/UNINOTE.otf');\r\n");
      out.write("	  }\r\n");
      out.write("\r\n");
      out.write("      html, body {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        width: auto;\r\n");
      out.write("        height: auto;\r\n");
      out.write("        font-family: aTitleGothic2;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .up_box {\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        top: 0px;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 80px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        z-index: 10;\r\n");
      out.write("        border-bottom: 2px solid #93c9eb;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      .up_box a {\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        font-size: 50px;\r\n");
      out.write("        color: #93c9eb;\r\n");
      out.write("        margin-left: 50px;\r\n");
      out.write("        font-weight: 1000;\r\n");
      out.write("        font-family: uninote;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .up_box button {\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        color: black;\r\n");
      out.write("        border: 2px solid black;\r\n");
      out.write("        width: 100px;\r\n");
      out.write("        height: 30px;\r\n");
      out.write("        padding: 0px;\r\n");
      out.write("        margin: 0px 10px;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        font-family: aTitleGothic2;\r\n");
      out.write("      }\r\n");
      out.write("	  \r\n");
      out.write("      .main_box {\r\n");
      out.write("        position: relative;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        background-color: #f9f9f9;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .main_box button {\r\n");
      out.write("        padding: 0px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        color: black;\r\n");
      out.write("        border: 2px solid black;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .item {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 20px;\r\n");
      out.write("        left: 20px;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        color: black;\r\n");
      out.write("        border: 2px solid #828282;\r\n");
      out.write("        width: 150px;\r\n");
      out.write("        height: 50px;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        overflow: auto;\r\n");
      out.write("        resize: both;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        color: #464646;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        max-width: 200px;\r\n");
      out.write("        max-height: 200px;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      #root, #grade1, #grade2, #grade3, #grade4 {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        width: 146px;\r\n");
      out.write("        height: 46px;\r\n");
      out.write("        border: 2px solid #828282;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        color: #464646;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      #counts_box {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        margin-left: auto;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      #hits {\r\n");
      out.write("        margin-left: 10px;\r\n");
      out.write("        margin-right: 10px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      #rcm {\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      .rcm_box {\r\n");
      out.write("        margin-left: 10px;\r\n");
      out.write("        margin-right: 10px;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      #rcm_btn {\r\n");
      out.write("        width: 50px;\r\n");
      out.write("        height: 30px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        border: 2px solid black;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("    	.contextmenu, #gradesContext {\r\n");
      out.write("		  display: none;\r\n");
      out.write("		  position: absolute;\r\n");
      out.write("		  width: 200px;\r\n");
      out.write("		  margin: 0;\r\n");
      out.write("		  padding: 0;\r\n");
      out.write("		  background: #FFFFFF;\r\n");
      out.write("		  border-radius: 5px;\r\n");
      out.write("		  list-style: none;\r\n");
      out.write("		  box-shadow:\r\n");
      out.write("		    0 15px 35px rgba(50,50,90,0.1),\r\n");
      out.write("		    0 5px 15px rgba(0,0,0,0.07);\r\n");
      out.write("		  overflow: hidden;\r\n");
      out.write("		  z-index: 999;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.contextmenu li, #gradesContext li {\r\n");
      out.write("		  border-left: 3px solid transparent;\r\n");
      out.write("		  transition: ease .2s;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.contextmenu li a, #gradesContext li a {\r\n");
      out.write("		  display: block;\r\n");
      out.write("		  padding: 10px;\r\n");
      out.write("		  color: #464646;\r\n");
      out.write("		  text-decoration: none;\r\n");
      out.write("		  transition: ease .2s;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.contextmenu li:hover, #gradesContext li:hover {\r\n");
      out.write("		  background: #93c9eb;\r\n");
      out.write("		  border-left: 3px solid #9C27B0;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.contextmenu li:hover a, #gradesContext li:hover {\r\n");
      out.write("		  color: #464646;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.new {\r\n");
      out.write("		  position: absolute;\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("\r\n");
      out.write("  <body>\r\n");
      out.write("    <script src=\"http://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("     ");

     	  // userID: login ID
     	  // mapID: map master ID
     	  // myLink: check come from home.jsp Mymap link
     	  // isMyMap: check map is mine
	      String userID = null;
          String mapID = null;
          String myLink = request.getParameter("myLink");
     	  boolean isMyMap = false;
     	  
     	  // get login ID
	      if(session.getAttribute("userID") != null){
	          userID = (String)session.getAttribute("userID");
	      }
     	  // get map masterID
	      if(request.getParameter("userID") != null) {
	    	  mapID = request.getParameter("userID");
	    	  System.out.println(mapID);
	      }
     	  // check correct access
	      if(userID == null && "yes".equals(myLink)) {
	    	  PrintWriter script = response.getWriter();
				script.println("<script>");
				script.println("alert('로그인을 해주세요.');");
				script.println("history.back();");
				script.println("</script>");
	      }
     	  // check current map is mine
	      if(mapID.equals(userID)) {
	    	  isMyMap = true;
	      }

     	  // hitsUp and get hits, recommend counts
	      CountsDAO countsDAO = new CountsDAO();
	      countsDAO.hitsUp(mapID);
          Counts counts = new Counts();
          counts = countsDAO.readCounts(mapID);
          
          // get state of map is public or private
          PublicmapDAO publicmapDAO = new PublicmapDAO();
          int publicmap = publicmapDAO.getPublicmap(mapID);
          
          String mapPW = "mapPW";
          boolean needMapPW = false;
          // if map is private and isn't my map check password
          if(publicmap == 0 && !isMyMap) {
        	  needMapPW = true;
        	  mapPW = publicmapDAO.getPassword(mapID);
          }
     
      out.write("\r\n");
      out.write("  \r\n");
      out.write("    <div class=\"up_box\" id=\"up_box\">\r\n");
      out.write("	  <p style=\"margin:0;\"><a href='home.jsp'><img src=\"img/LogoColor.png\" alt=\"no image\" height=\"50\" style=\"vertical-align: middle;\"><span style=\"vertical-align: middle;\">UNINOTE</span></a></p>\r\n");
      out.write("      \r\n");
      out.write("      <!-- 조회수와 추천수 -->\r\n");
      out.write("      <div id=\"counts_box\">\r\n");
      out.write("        ");
 // if current map is my map create public/privateMap button 
      out.write("\r\n");
      out.write("        ");
 if(isMyMap) { 
      out.write("\r\n");
      out.write("	        ");
 if(publicmap == 1) { 
      out.write(" \r\n");
      out.write("	        <form id=\"publicMapForm\" method=\"post\">\r\n");
      out.write("	          <button type=\"button\" name=\"publicMap\" id=\"publicMap\" onclick=\"publicMapAction(); return false\" style=\"font-weight: bold;\">비공개</button>\r\n");
      out.write("	        </form>\r\n");
      out.write("	        ");
 }else { 
      out.write("\r\n");
      out.write("	        <form id=\"publicMapForm\" method=\"post\">\r\n");
      out.write("	          <button type=\"button\" name=\"publicMap\" id=\"publicMap\" onclick=\"publicMapAction(); return false\" style=\"font-weight: bold;\">공개</button>\r\n");
      out.write("	        </form>    \r\n");
      out.write("	        ");
 } 
      out.write("\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("      \r\n");
      out.write("        ");
 if(userID == null) { 
      out.write("\r\n");
      out.write("          <div class=\"rcm_box\">\r\n");
      out.write("          <span id=\"hits\">조회수 : ");
      out.print(counts.getHits() );
      out.write("</span>\r\n");
      out.write("          <span id=\"rcm\">추천 : ");
      out.print(counts.getRecommend() );
      out.write(" </span>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 }
           else { 
      out.write("\r\n");
      out.write("          <div class=\"rcm_box\">\r\n");
      out.write("          <span id=\"hits\">조회수 : ");
      out.print(counts.getHits() );
      out.write("</span>\r\n");
      out.write("          <span id=\"rcm\">추천 : ");
      out.print(counts.getRecommend() );
      out.write(" </span>\r\n");
      out.write("          <button id=\"rcm_btn\" type=\"button\" onclick=\"location.replace('recommendUp.jsp?userID=");
      out.print(userID);
      out.write("&mapID=");
      out.print(mapID);
      out.write("')\">추천</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- hidden form for ajax -->\r\n");
      out.write("      <!-- use for sending itemSql, lineSql -->\r\n");
      out.write("      <form id=\"saveActionForm\" method=\"post\">\r\n");
      out.write("        <input type=\"hidden\" id=\"itemSql\" name=\"itemSql\" value=\"\">\r\n");
      out.write("        <input type=\"hidden\" id=\"lineSql\" name=\"lineSql\" value=\"\">\r\n");
      out.write("      </form>\r\n");
      out.write("      <!-- use for sending fileData -->\r\n");
      out.write("      <form id=\"fileForm\" method=\"post\">\r\n");
      out.write("        <input type=\"hidden\" id=\"fileData\" name=\"fileData\">\r\n");
      out.write("      </form>\r\n");
      out.write("      <!-- use for sending noteData -->\r\n");
      out.write("      <form id=\"noteForm\" method=\"post\">\r\n");
      out.write("        <input type=\"hidden\" id=\"noteItemID\" name=\"noteItemID\">\r\n");
      out.write("        <input type=\"hidden\" id=\"noteType\" name=\"noteType\">\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- set initial 5 root items -->\r\n");
      out.write("    <div id=\"mainBox_wrap\">\r\n");
      out.write("    <div class=\"main_box\" id=\"main_box\">\r\n");
      out.write("      <div id=\"root\">UNINOTE</div>\r\n");
      out.write("      <div class=\"grades\" id=\"grade1\" onclick=\"clicked(event)\" ondragover=\"allowDrop(event)\" ondrop=\"drop(event)\" oncontextmenu=\"contextmenu(event)\">1학년</div>\r\n");
      out.write("      <div class=\"grades\" id=\"grade2\" onclick=\"clicked(event)\" ondragover=\"allowDrop(event)\" ondrop=\"drop(event)\" oncontextmenu=\"contextmenu(event)\">2학년</div>\r\n");
      out.write("      <div class=\"grades\" id=\"grade3\" onclick=\"clicked(event)\" ondragover=\"allowDrop(event)\" ondrop=\"drop(event)\" oncontextmenu=\"contextmenu(event)\">3학년</div>\r\n");
      out.write("      <div class=\"grades\" id=\"grade4\" onclick=\"clicked(event)\" ondragover=\"allowDrop(event)\" ondrop=\"drop(event)\" oncontextmenu=\"contextmenu(event)\">4학년</div>\r\n");
      out.write("\r\n");
      out.write("      <svg width=\"100%\" height=\"100%\" id=\"svg\" ondragover=\"allowDrop(event)\" ondrop=\"drop(event)\" onmouseup=\"svgMouseUp(event)\">\r\n");
      out.write("       ");

         // get line data from DB and draw hidden on document
         // It will be positioned by drawAllLines() in <script> when onshow document
         LineDAO lineDAO = new LineDAO();
         ArrayList<Line> lineList = lineDAO.getList(mapID);
         for(int i=0; i<lineList.size(); i++) {
       
      out.write("\r\n");
      out.write("         <line class=\"itemLines\" id=");
      out.print(lineList.get(i).getLineID());
      out.write(" style=\"stroke: rgb(170, 170, 170); stroke-width: 2;\"></line>\r\n");
      out.write("       ");

         }
       
      out.write("\r\n");
      out.write("      </svg>\r\n");
      out.write("      \r\n");
      out.write("   ");

     // get all data to itemList
     // make itemIdList to use create not APP items
     // make itemAppList to send itemAppList in <script> (check it is created from APP)
     // make appIdxList to send appIdxList in <script>
     ItemDAO itemDAO = new ItemDAO(); 
     ArrayList<Item> itemList = itemDAO.getList(mapID);
     ArrayList<String> itemIdList = new ArrayList<>();
     ArrayList<String> itemAppList = new ArrayList<>();
     ArrayList<Integer> appIdxList = new ArrayList<>();
     
     int size = itemList.size();
     for(int i=0; i<size; i++) {
    	 // if it's from APP
    	 if(itemList.get(i).getItemTop().equals("APP")) {
    		 itemAppList.add("'" + itemList.get(i).getItemID() + "'");
    		 appIdxList.add(i);
    		 
    		 // create hidden item, It's authorized, It will be positioned by checkNewItems() in <script>
    		 if(isMyMap) {
    
      out.write("\r\n");
      out.write("    	         <div class=\"item\" id=");
      out.print( itemList.get(i).getItemID() );
      out.write(" draggable=\"true\" ondragstart=\"dragStart(event)\" ondrag=\"onDrag(event)\" ondragover=\"allowDrop(event)\" ondrop=\"drop(event)\" onclick=\"clicked(event)\" ondblclick=\"popup()\" onmousedown=\"mouseDown(event)\" onmouseup=\"mouseUp(event)\" oncontextmenu=\"contextmenu(event)\" style=\"2px solid black; top: 0px; left: 0px; width: ");
      out.print(itemList.get(i).getItemWidth());
      out.write("; height: ");
      out.print(itemList.get(i).getItemHeight());
      out.write("; displasy: none;\">");
      out.print( itemList.get(i).getItemContent() );
      out.write("</div>\r\n");
      out.write("    ");

    		 }
    		 // create hidden item, It's not authorized, It will be positioned by checkNewItems() in <script>
    		 else {
    
      out.write("\r\n");
      out.write("                 <div class=\"item\" id=");
      out.print( itemList.get(i).getItemID() );
      out.write(" onclick=\"clicked(event)\" ondblclick=\"popup()\" oncontextmenu=\"contextmenu(event)\" style=\"2px solid black; resize: none; top: 0px; left: 0px; width: ");
      out.print(itemList.get(i).getItemWidth());
      out.write("; height: ");
      out.print(itemList.get(i).getItemHeight());
      out.write("; displasy: none;\">");
      out.print( itemList.get(i).getItemContent() );
      out.write("</div>\r\n");
      out.write("    ");
	 
    		 }
    	 }
     }
     //System.out.println(appIdxList);
     
     // remove APP items in itemList
     // if it's not from APP items, It will be positioned by positionItems(); in <script>
     for(int i=0; i<appIdxList.size(); i++) {
    	 int idx = appIdxList.get(appIdxList.size()-i-1);
    	 itemList.remove(idx);
     }
     //System.out.println(itemAppList);
     
     for(int i=0; i<itemList.size(); i++) {
    	 itemIdList.add(itemList.get(i).getItemID());
     }
     //System.out.println(itemIdList);
     
     
     //System.out.println("1. " + itemIdList); 
     // itemCnt is used to prevent creating same itemID
     int itemCnt = itemDAO.getNext(mapID);
     
     
     /*
     onload item position algorithm explain
     at DB item has attribute itemTop(ChildY - ParentY), itemLeft(ChildX - ParentX)
     get target from itmeList, save all parent in stack until finding grade(root)
     add each ParentX, ParentY by stack start with target X,Y
     
     ps) top=1875, left=1843 is fitted my monitor size
         to fit other monitor positionItems() in <script> will be run
     */
     // if myMap create authorized items
     if(isMyMap) {
       for(int i=0; i<itemList.size(); i++) {
	      	 String target = itemIdList.get(i);
	      	 String from = target.substring(0, target.indexOf("_"));
	      	 ArrayList<String> stack = new ArrayList<>();
	      	 stack.add(target);
	      	 //System.out.println("2. " + stack);
	      	 
	      	 while(!from.equals("grade1") && !from.equals("grade2") && !from.equals("grade3") && !from.equals("grade4")) {
	      		 for(int j=0; j<itemList.size(); j++) {
	      			 String str = itemIdList.get(j);
	      			 if(str.contains("_" + from)) {
	      				 stack.add(str);
	      				 from = str.substring(0, str.indexOf("_"));
	      				 break;
	      			 }
	      		 }
	      	 }
	      	 stack.add(from);
	      	 //System.out.println("3. " + stack);
	      	 
	      	 String pop = stack.get(stack.size()-1);
	      	 stack.remove(stack.size()-1);
	      	 
	      	 int idx = 0;
	      	 float top = 0;
	      	 float left = 0;
	      	 if(pop.equals("grade1")) {
	      		 //System.out.println("(1) " + stack);
	      		 top = 1875;
	      		 left = 1843;
	      		 for(int j=0; j<stack.size(); j++) {
	      			 pop = stack.get(j);
	      			 idx = itemIdList.indexOf(pop);
	      			 //System.out.println("(2) " +itemList.get(idx).getItemTop());
	      			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
	      			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
	      		 }
	      	 }
	      	 else if(pop.equals("grade2")) {
	      		 top = 2235;
	      		 left = 1843;
	      		 for(int j=0; j<stack.size(); j++) {
	      			 pop = stack.get(j);
	      			 idx = itemIdList.indexOf(pop);
	      			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
	      			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
	      		 }
	      	 }
	      	 else if(pop.equals("grade3")) {
	      		 top = 1875;
	      		 left = 2423;
	      		 for(int j=0; j<stack.size(); j++) {
	      			 pop = stack.get(j);
	      			 idx = itemIdList.indexOf(pop);
	      			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
	      			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
	      		 }
	      	 }
	      	 else if(pop.equals("grade4")) {
	      		 top = 2235;
	      		 left = 2423;
	      		 for(int j=0; j<stack.size(); j++) {
	      			 pop = stack.get(j);
	      			 idx = itemIdList.indexOf(pop);
	      			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
	      			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
	      		 }
	      	 }
	      	 
	      	 for(int j=0; j<stack.size(); j++) {
	      		 stack.remove(0);
	      	 }
	      	 
	      	 //System.out.println("End. " + top + " " + left);
	      	 String topPX = top + "px";
	      	 String leftPX = left + "px";
	   
      out.write("\r\n");
      out.write("	         <div class=\"item\" id=");
      out.print( itemList.get(i).getItemID() );
      out.write(" draggable=\"true\" ondragstart=\"dragStart(event)\" ondrag=\"onDrag(event)\" ondragover=\"allowDrop(event)\" ondrop=\"drop(event)\" onclick=\"clicked(event)\" ondblclick=\"popup()\" onmousedown=\"mouseDown(event)\" onmouseup=\"mouseUp(event)\" oncontextmenu=\"contextmenu(event)\" style=\"2px solid black; top: ");
      out.print(topPX );
      out.write("; left: ");
      out.print( leftPX );
      out.write("; width: ");
      out.print(itemList.get(i).getItemWidth());
      out.write("; height: ");
      out.print(itemList.get(i).getItemHeight());
      out.write('"');
      out.write('>');
      out.print( itemList.get(i).getItemContent() );
      out.write("</div>\r\n");
      out.write("	   ");

    	 }
     }
     // if not myMap create no authorized items
     else {
       for(int i=0; i<itemList.size(); i++) {
        	 String target = itemIdList.get(i);
          	 String from = target.substring(0, target.indexOf("_"));
          	 ArrayList<String> stack = new ArrayList<>();
          	 stack.add(target);
          	 //System.out.println("2. " + stack);
          	 
          	 while(!from.equals("grade1") && !from.equals("grade2") && !from.equals("grade3") && !from.equals("grade4")) {
          		 for(int j=0; j<itemList.size(); j++) {
          			 String str = itemIdList.get(j);
          			 if(str.contains("_" + from)) {
          				 stack.add(str);
          				 from = str.substring(0, str.indexOf("_"));
          				 break;
          			 }
          		 }
          	 }
          	 stack.add(from);
          	 //System.out.println("3. " + stack);
          	 
          	 String pop = stack.get(stack.size()-1);
          	 stack.remove(stack.size()-1);
          	 
          	 int idx = 0;
          	 float top = 0;
          	 float left = 0;
          	 if(pop.equals("grade1")) {
          		 //System.out.println("(1) " + stack);
          		 top = 1843;
          		 left = 1875;
          		 for(int j=0; j<stack.size(); j++) {
          			 pop = stack.get(j);
          			 idx = itemIdList.indexOf(pop);
          			 //System.out.println("(2) " +itemList.get(idx).getItemTop());
          			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
          			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
          		 }
          	 }
          	 else if(pop.equals("grade2")) {
          		 top = 2235;
          		 left = 1843;
          		 for(int j=0; j<stack.size(); j++) {
          			 pop = stack.get(j);
          			 idx = itemIdList.indexOf(pop);
          			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
          			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
          		 }
          	 }
          	 else if(pop.equals("grade3")) {
          		 top = 1875;
          		 left = 2423;
          		 for(int j=0; j<stack.size(); j++) {
          			 pop = stack.get(j);
          			 idx = itemIdList.indexOf(pop);
          			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
          			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
          		 }
          	 }
          	 else if(pop.equals("grade4")) {
          		 top = 2235;
          		 left = 2423;
          		 for(int j=0; j<stack.size(); j++) {
          			 pop = stack.get(j);
          			 idx = itemIdList.indexOf(pop);
          			 top = top + Float.parseFloat(itemList.get(idx).getItemTop());
          			 left = left + Float.parseFloat(itemList.get(idx).getItemLeft());
          		 }
          	 }
          	 
          	 for(int j=0; j<stack.size(); j++) {
          		 stack.remove(0);
          	 }
          	 
          	 //System.out.println("End. " + top + " " + left);
          	 String topPX = top + "px";
          	 String leftPX = left + "px";
   
      out.write("\r\n");
      out.write("         <div class=\"item\" id=");
      out.print( itemList.get(i).getItemID() );
      out.write(" onclick=\"clicked(event)\" ondblclick=\"popup()\" oncontextmenu=\"contextmenu(event)\" style=\"2px solid black; resize: none; top: ");
      out.print(topPX );
      out.write("; left: ");
      out.print(leftPX );
      out.write("; width: ");
      out.print(itemList.get(i).getItemWidth());
      out.write("; height: ");
      out.print(itemList.get(i).getItemHeight());
      out.write('"');
      out.write('>');
      out.print( itemList.get(i).getItemContent() );
      out.write("</div>\r\n");
      out.write("   ");

       }
     }
   
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    ");
 // create hidden contextmenu by authorization 
      out.write("\r\n");
      out.write("    ");
 if(isMyMap) { 
      out.write("\r\n");
      out.write("    <ul class=\"contextmenu\">\r\n");
      out.write("    	<li><a href=\"javascript:createItem();\">항목 추가</a></li>\r\n");
      out.write("    	<li><a href=\"javascript:deleteItem(fromID);\">항목 삭제</a></li>\r\n");
      out.write("    	<li><a href=\"javascript:popup();\">추가 내용</a></li>\r\n");
      out.write("    	<li><a href=\"javascript:upload_download_window();\">업/다운로드</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    \r\n");
      out.write("    <ul id=\"gradesContext\">\r\n");
      out.write("    	<li><a href=\"javascript:createItem();\">항목 추가</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    ");
 }else { 
      out.write("\r\n");
      out.write("    <ul class=\"contextmenu\">\r\n");
      out.write("    	<li><a href=\"javascript:popup();\">추가 내용</a></li>\r\n");
      out.write("    	<li><a href=\"javascript:upload_download_window();\">다운로드</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("      // mainBox is parent of svg\r\n");
      out.write("      // upBox is fixed upBox\r\n");
      out.write("      // svg is using for drawing lines\r\n");
      out.write("      var mainBox = document.getElementsByClassName(\"main_box\")[0];\r\n");
      out.write("      var upBox = document.getElementById(\"up_box\");\r\n");
      out.write("      var svg = document.getElementById(\"svg\");\r\n");
      out.write("\r\n");
      out.write("      // lastItem X,Y,W,H is current selected items data\r\n");
      out.write("      // checkLR is check item's root is grade1,2 or grade3,4 to draw line at left side or right side\r\n");
      out.write("      var lastItemX = 0;\r\n");
      out.write("      var lastItemY = 0;\r\n");
      out.write("      var lastItemW = 0;\r\n");
      out.write("      var lastItemH = 0;\r\n");
      out.write("      var checkLR = 0;\r\n");
      out.write("\r\n");
      out.write("      // current mouse X,Y on svg\r\n");
      out.write("      var mouseX = 0;\r\n");
      out.write("      var mouseY = 0;\r\n");
      out.write("\r\n");
      out.write("      // fromID is selected item\r\n");
      out.write("      // toID is using any-action is change fromID to toID\r\n");
      out.write("      // itemCnt is prevent creating same itemID\r\n");
      out.write("      var fromID = \"\";\r\n");
      out.write("      var toID = \"\";\r\n");
      out.write("      var itemCnt = ");
      out.print(itemCnt);
      out.write(";\r\n");
      out.write("      var itemID = \"item\" + itemCnt;\r\n");
      out.write("\r\n");
      out.write("      // findingParent is check item is trying to change its parent item\r\n");
      out.write("      // publicmap is show current map is public or private\r\n");
      out.write("      // userID is login ID\r\n");
      out.write("      // mapID is map mater ID\r\n");
      out.write("      var findingParent = 0;\r\n");
      out.write("      var publicmap = ");
      out.print(publicmap);
      out.write(";\r\n");
      out.write("      var userID = \"");
      out.print(mapID);
      out.write("\"; // 로그인한 사용자의 ID가 아니라 map의 ID를 사용\r\n");
      out.write("      var mapID = \"");
      out.print(mapID);
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("      // get (root, grade1,2,3,4)'s (X,Y,W,H) by functions\r\n");
      out.write("      var rootX = getX(\"root\");\r\n");
      out.write("      var rootY = getY(\"root\");\r\n");
      out.write("      var rootW = getW(\"root\");\r\n");
      out.write("      var rootH = getH(\"root\");\r\n");
      out.write("      var grade1X = getX(\"grade1\");\r\n");
      out.write("      var grade1Y = getY(\"grade1\");\r\n");
      out.write("      var grade2X = getX(\"grade2\");\r\n");
      out.write("      var grade2Y = getY(\"grade2\");\r\n");
      out.write("      var grade3X = getX(\"grade3\");\r\n");
      out.write("      var grade3Y = getY(\"grade3\");\r\n");
      out.write("      var grade4X = getX(\"grade4\");\r\n");
      out.write("      var grade4Y = getY(\"grade4\");\r\n");
      out.write("      \r\n");
      out.write("      // itemSQL, lineSQL is using at deleteItem(fromID)\r\n");
      out.write("      // itemWidth, Height is basic item width and height\r\n");
      out.write("      // beforeContent is using window.addEventListener(\"keyup\", event)\r\n");
      out.write("      var itemSQL = {};\r\n");
      out.write("      var lineSQL = {};\r\n");
      out.write("      var itemWidth = \"150px\";\r\n");
      out.write("      var itemHeight = \"50px\";\r\n");
      out.write("      var beforeContent = \"\";\r\n");
      out.write("      //var saveFlag = false;\r\n");
      out.write("      \r\n");
      out.write("      // 동학\r\n");
      out.write("      var fileData = document.getElementById(\"fileData\");\r\n");
      out.write("      var fileChangeID = \"\";\r\n");
      out.write("      var fileForm;\r\n");
      out.write("      \r\n");
      out.write("      // 동학\r\n");
      out.write("      var noteItemID = document.getElementById(\"noteItemID\");\r\n");
      out.write("      var noteType = document.getElementById(\"noteType\");\r\n");
      out.write("      var noteForm;\r\n");
      out.write("      \r\n");
      out.write("      // sql is using for making String itemSql, lineSql\r\n");
      out.write("      // saveActionForm points hidden saveActionForm in HTML\r\n");
      out.write("      // itemSql, lineSql is using for setAttribute on saveActionForm\r\n");
      out.write("      // removedLine is using clicked(e) (findingParent == 1)\r\n");
      out.write("      var sql = \"\";\r\n");
      out.write("      var saveActionForm;\r\n");
      out.write("      var itemSql = document.getElementById(\"itemSql\");\r\n");
      out.write("      var lineSql = document.getElementById(\"lineSql\");\r\n");
      out.write("      var removedLine;\r\n");
      out.write("      \r\n");
      out.write("      // isMymap is checking map is mine\r\n");
      out.write("      var isMyMap = ");
      out.print(isMyMap);
      out.write(";\r\n");
      out.write("	  \r\n");
      out.write("      // itemAppList, Dict is using about APP items action\r\n");
      out.write("	  var itemAppList = ");
      out.print(itemAppList );
      out.write(";\r\n");
      out.write("	  var itemAppDict = {};\r\n");
      out.write("	  //console.log(itemAppList);\r\n");
      out.write("	  \r\n");
      out.write("	  var itemSizeFlag = false;\r\n");
      out.write("	  var mouseDownItem;\r\n");
      out.write("	  \r\n");
      out.write("	  // if map isn't mine and map is private check password\r\n");
      out.write("	  var needMapPW = ");
      out.print(needMapPW );
      out.write(";\r\n");
      out.write("	  if(needMapPW) {\r\n");
      out.write("		  var mapPW ='");
      out.print(mapPW);
      out.write("';\r\n");
      out.write("    	  var password = \"\";\r\n");
      out.write("          password = prompt('비밀번호를 입력하세요.', '비밀번호를 입력하세요(10자)');\r\n");
      out.write("          if(password != mapPW) {\r\n");
      out.write("        	  alert(\"비밀번호가 틀렸습니다.\");\r\n");
      out.write("        	  history.back();\r\n");
      out.write("          }\r\n");
      out.write("	  }\r\n");
      out.write("	  \r\n");
      out.write("	  var mainWrap = document.getElementById(\"mainBox_wrap\");\r\n");
      out.write("	  //console.log(screen.availWidth + \"   \" + screen.availHeight);\r\n");
      out.write("	  mainWrap.style.width = screen.availWidth*2.3 + \"px\";\r\n");
      out.write("	  mainWrap.style.height = screen.availHeight*4 + \"px\";\r\n");
      out.write("	  mainWrap.style.maxWidth = screen.availWidth*2.3 + \"px\";\r\n");
      out.write("	  mainWrap.style.maxHeight = screen.availHeight*4 + \"px\";\r\n");
      out.write("	  \r\n");
      out.write("	  // position root items\r\n");
      out.write("      var grades = document.getElementById(\"grade1\");\r\n");
      out.write("      grades.style.left = (mainBox.offsetWidth/2 - 365) + \"px\";\r\n");
      out.write("      grades.style.top = (mainBox.offsetHeight/2 - 205) + \"px\";\r\n");
      out.write("      \r\n");
      out.write("      grades = document.getElementById(\"grade2\");\r\n");
      out.write("      grades.style.left = (mainBox.offsetWidth/2 - 365) + \"px\";\r\n");
      out.write("      grades.style.top = (mainBox.offsetHeight/2 + 155) + \"px\";\r\n");
      out.write("      \r\n");
      out.write("      grades = document.getElementById(\"grade3\");\r\n");
      out.write("      grades.style.left = (mainBox.offsetWidth/2 + 215) + \"px\";\r\n");
      out.write("      grades.style.top = (mainBox.offsetHeight/2 - 205) + \"px\";\r\n");
      out.write("      \r\n");
      out.write("      grades = document.getElementById(\"grade4\");\r\n");
      out.write("      grades.style.left = (mainBox.offsetWidth/2 + 215) + \"px\";\r\n");
      out.write("      grades.style.top = (mainBox.offsetHeight/2 + 155) + \"px\";\r\n");
      out.write("      \r\n");
      out.write("      grades = document.getElementById(\"root\");\r\n");
      out.write("      grades.style.left = (mainBox.offsetWidth/2 - 75) + \"px\";\r\n");
      out.write("      grades.style.top = (mainBox.offsetHeight/2 - 25) + \"px\";\r\n");
      out.write("      \r\n");
      out.write("      // draw root items lines\r\n");
      out.write("      drawLineByID(\"rootL\", mainBox.offsetWidth/2-145, mainBox.offsetHeight/2, mainBox.offsetWidth/2-75, mainBox.offsetHeight/2);\r\n");
      out.write("      drawLineByID(\"g12\", mainBox.offsetWidth/2-145, mainBox.offsetHeight/2 - 180, mainBox.offsetWidth/2-145, mainBox.offsetHeight/2 + 180);\r\n");
      out.write("      drawLineByID(\"g1\", mainBox.offsetWidth/2-215, mainBox.offsetHeight/2 - 180, mainBox.offsetWidth/2-145, mainBox.offsetHeight/2 - 180);\r\n");
      out.write("      drawLineByID(\"g2\", mainBox.offsetWidth/2-215, mainBox.offsetHeight/2 + 180, mainBox.offsetWidth/2-145, mainBox.offsetHeight/2 + 180);\r\n");
      out.write("      drawLineByID(\"rootR\", mainBox.offsetWidth/2+75, mainBox.offsetHeight/2, mainBox.offsetWidth/2+145, mainBox.offsetHeight/2);\r\n");
      out.write("      drawLineByID(\"g34\", mainBox.offsetWidth/2+145, mainBox.offsetHeight/2 - 180, mainBox.offsetWidth/2+145, mainBox.offsetHeight/2 + 180);\r\n");
      out.write("      drawLineByID(\"g3\", mainBox.offsetWidth/2+215, mainBox.offsetHeight/2 - 180, mainBox.offsetWidth/2+145, mainBox.offsetHeight/2 - 180);\r\n");
      out.write("      drawLineByID(\"g4\", mainBox.offsetWidth/2+215, mainBox.offsetHeight/2 + 180, mainBox.offsetWidth/2+145, mainBox.offsetHeight/2 + 180);\r\n");
      out.write("      \r\n");
      out.write("      // position items for fitting each monitor\r\n");
      out.write("      // draw lines for fitting each monitor\r\n");
      out.write("      // check New items from APP\r\n");
      out.write("      positionItems();\r\n");
      out.write("      drawAllLines();\r\n");
      out.write("      checkNewItems();\r\n");
      out.write("\r\n");
      out.write("      // show center of svg\r\n");
      out.write("      document.documentElement.scrollLeft = mainBox.offsetWidth/2 - screen.availWidth/2;\r\n");
      out.write("      document.documentElement.scrollTop = mainBox.offsetHeight/2 - screen.availHeight/2;\r\n");
      out.write("      //console.log(mainBox.offsetWidth/2-75);\r\n");
      out.write("\r\n");
      out.write("      // 세션 만료시 home으로 이동\r\n");
      out.write("      var maxtime = ");
      out.print( session.getMaxInactiveInterval() );
      out.write(";\r\n");
      out.write("      setTimeout(function() {\r\n");
      out.write("    	  if(isMyMap) {\r\n");
      out.write("              console.log(\"timeout\");\r\n");
      out.write("              location.href=\"home.jsp\";\r\n");
      out.write("    	  }\r\n");
      out.write("      }, maxtime*1000);\r\n");
      out.write("      \r\n");
      out.write("      /*\r\n");
      out.write("      function clicked explain\r\n");
      out.write("      if change parent item\r\n");
      out.write("        change itemID\r\n");
      out.write("        change file DB, folder name\r\n");
      out.write("        change note DB\r\n");
      out.write("        modify selected item's line\r\n");
      out.write("        change itemID, lineID DB (only selected item and it's line)\r\n");
      out.write("      \r\n");
      out.write("        if need not change L, R\r\n");
      out.write("          change lineID DB (directly connected from selected item)\r\n");
      out.write("        else need change L, R\r\n");
      out.write("          change itemID, lineID DB by Tree traversal (all child of selected-item)\r\n");
      out.write("      \r\n");
      out.write("        change selected-item to parent-item\r\n");
      out.write("        update itemTop, itemLeft DB (calculate relative X, Y)\r\n");
      out.write("      else just change selected item\r\n");
      out.write("        change selected item\r\n");
      out.write("      */\r\n");
      out.write("      function clicked(e) {\r\n");
      out.write("       var beforeItemID = fromID;\r\n");
      out.write("       var beforeItem = document.getElementById(beforeItemID);\r\n");
      out.write("       var afterItemID = \"\";\r\n");
      out.write("       var changeLRFlag = false;\r\n");
      out.write("       \r\n");
      out.write("        // if change parent item\r\n");
      out.write("        if(findingParent == 1) {\r\n");
      out.write("           // change itemID\r\n");
      out.write("           if(e.target.id == \"grade1\" || e.target.id == \"grade2\") {\r\n");
      out.write("               var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("               var toFrom = \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length);\r\n");
      out.write("                for (var i=0; i<items.length; i++) {\r\n");
      out.write("                    if(items[i].id.indexOf(toFrom) > -1) {\r\n");
      out.write("                      var item = document.getElementById(items[i].id);\r\n");
      out.write("                      if(item.id.substring(item.id.length-1, item.id.length) == \"R\") {\r\n");
      out.write("                    	  changeLRFlag = true;\r\n");
      out.write("                      }\r\n");
      out.write("                      item.id = e.target.id + \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length - 1) + \"L\";\r\n");
      out.write("                      fromID = e.target.id + \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length - 1) + \"L\";\r\n");
      out.write("                      break;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("           }\r\n");
      out.write("           else if(e.target.id == \"grade3\" || e.target.id == \"grade4\") {\r\n");
      out.write("               var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("               var toFrom = \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length);\r\n");
      out.write("                for (var i=0; i<items.length; i++) {\r\n");
      out.write("                    if(items[i].id.indexOf(toFrom) > -1) {\r\n");
      out.write("                      var item = document.getElementById(items[i].id);\r\n");
      out.write("                      if(item.id.substring(item.id.length-1, item.id.length) == \"L\") {\r\n");
      out.write("                    	  changeLRFlag = true;\r\n");
      out.write("                      }\r\n");
      out.write("                      item.id = e.target.id + \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length - 1) + \"R\";\r\n");
      out.write("                      fromID = e.target.id + \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length - 1) + \"R\";\r\n");
      out.write("                      break;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("           }\r\n");
      out.write("           else {\r\n");
      out.write("               var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("               var toFrom = \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length);\r\n");
      out.write("                for (var i=0; i<items.length; i++) {\r\n");
      out.write("                    if(items[i].id.indexOf(toFrom) > -1) {\r\n");
      out.write("                      var item = document.getElementById(items[i].id);\r\n");
      out.write("                      item.id = e.target.id.substring(e.target.id.indexOf(\"_\")+1, e.target.id.length-1) + \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length - 1) + e.target.id.substring(e.target.id.length-1, e.target.id.length);\r\n");
      out.write("                      fromID = e.target.id.substring(e.target.id.indexOf(\"_\")+1, e.target.id.length-1) + \"_\" + fromID.substring(fromID.indexOf(\"_\")+1, fromID.length - 1) + e.target.id.substring(e.target.id.length-1, e.target.id.length);\r\n");
      out.write("                      break;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("           }\r\n");
      out.write("           afterItemID = fromID;\r\n");
      out.write("           \r\n");
      out.write("           //change file DB, folder name\r\n");
      out.write("           // 파일 db, 폴더 변경\r\n");
      out.write("           fileChangeID = (beforeItemID + \"/\" + afterItemID);\r\n");
      out.write("           fileData.setAttribute(\"value\", fileChangeID);\r\n");
      out.write("           fileForm = $(\"#fileForm\").serialize();\r\n");
      out.write("           $.ajax({\r\n");
      out.write("              url: \"updateFileAction.jsp\",\r\n");
      out.write("              type: \"post\",\r\n");
      out.write("              dataType : 'json',\r\n");
      out.write("              cache: false,\r\n");
      out.write("              data: fileForm,\r\n");
      out.write("              success: function(data) {\r\n");
      out.write("                 //console.log(data);\r\n");
      out.write("            	  //console.log(\"success\");\r\n");
      out.write("              },\r\n");
      out.write("              error: function (request, status, error) {\r\n");
      out.write("                 console.log(error);\r\n");
      out.write("              }\r\n");
      out.write("           });\r\n");
      out.write("           \r\n");
      out.write("           // change note DB\r\n");
      out.write("           noteItemID.setAttribute(\"value\", beforeItemID + \"/\" + afterItemID);\r\n");
      out.write("           noteType.setAttribute(\"value\", \"change\");\r\n");
      out.write("           noteForm = $(\"#noteForm\").serialize();\r\n");
      out.write("           $.ajax({\r\n");
      out.write("              url: \"noteAction.jsp\",\r\n");
      out.write("              type: \"post\",\r\n");
      out.write("              cache: false,\r\n");
      out.write("              data: noteForm,\r\n");
      out.write("              dataType: \"html\",\r\n");
      out.write("              success: function(data) {\r\n");
      out.write("                 //console.log(data);\r\n");
      out.write("            	  //console.log(\"success\");\r\n");
      out.write("              },\r\n");
      out.write("              error: function (request, status, error) {\r\n");
      out.write("                 console.log(error);\r\n");
      out.write("              }\r\n");
      out.write("           });\r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("            //saveFlag = true;\r\n");
      out.write("            // modify selected item's line\r\n");
      out.write("            drawLine(e.target.id, fromID);\r\n");
      out.write("            findingParent = 0;\r\n");
      out.write("            \r\n");
      out.write("            // change itemID, lineID DB (only selected item and it's line)\r\n");
      out.write("            var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("            var toFrom = \"To\" + afterItemID;\r\n");
      out.write("            for(var j=0; j<lines.length; j++) {\r\n");
      out.write("               if(lines[j].id.indexOf(toFrom) > -1) {\r\n");
      out.write("                  var line = document.getElementById(lines[j].id);\r\n");
      out.write("                  sql = \"update line set lineID='\"+line.getAttribute(\"id\")+\"' where lineID='\"+removedLine+\"' and userID='\"+userID+\"'\";\r\n");
      out.write("               }\r\n");
      out.write("            }\r\n");
      out.write("            lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("            \r\n");
      out.write("            sql = \"update item set itemID='\"+afterItemID+\"' where itemID='\"+beforeItemID+\"' and userID='\"+userID+\"'\";\r\n");
      out.write("            itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("            saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: \"saveItemAction.jsp\",\r\n");
      out.write("               type: \"post\",\r\n");
      out.write("               cache: false,\r\n");
      out.write("               data: saveActionForm,\r\n");
      out.write("               dataType: \"html\",\r\n");
      out.write("               success: function(data) {\r\n");
      out.write("            	   //console.log(\"success\");\r\n");
      out.write("                  //console.log(data);\r\n");
      out.write("               },\r\n");
      out.write("               error: function (request, status, error) {\r\n");
      out.write("                  console.log(error);\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("            itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("            lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("            var fromTo = beforeItemID + \"To\";\r\n");
      out.write("            for(var j=0; j<lines.length; j++) {\r\n");
      out.write("               if(lines[j].id.indexOf(fromTo) > -1) {\r\n");
      out.write("                  var line = document.getElementById(lines[j].id);\r\n");
      out.write("                  sql = \"update line set lineID='\"+afterItemID+\"To\"+line.getAttribute(\"id\").substring(line.getAttribute(\"id\").indexOf(\"To\")+2, line.getAttribute(\"id\").length)+\"' where lineID='\"+line.getAttribute(\"id\")+\"' and userID='\"+userID+\"'\";\r\n");
      out.write("                  line.id = afterItemID+\"To\"+line.getAttribute(\"id\").substring(line.getAttribute(\"id\").indexOf(\"To\")+2, line.getAttribute(\"id\").length);\r\n");
      out.write("               }\r\n");
      out.write("               lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("               \r\n");
      out.write("               saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("               $.ajax({\r\n");
      out.write("                  url: \"saveItemAction.jsp\",\r\n");
      out.write("                  type: \"post\",\r\n");
      out.write("                  cache: false,\r\n");
      out.write("                  data: saveActionForm,\r\n");
      out.write("                  dataType: \"html\",\r\n");
      out.write("                  async: false,\r\n");
      out.write("                  success: function(data) {\r\n");
      out.write("                     //console.log(\"success\");\r\n");
      out.write("                     //console.log(data);\r\n");
      out.write("                  },\r\n");
      out.write("                  error: function (request, status, error) {\r\n");
      out.write("                     console.log(error);\r\n");
      out.write("                  }\r\n");
      out.write("               });\r\n");
      out.write("				//console.log(itemSql.getAttribute(\"value\"));\r\n");
      out.write("				//console.log(lineSql.getAttribute(\"value\"));\r\n");
      out.write("               itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("               lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            //-----------------------------------------------------------\r\n");
      out.write("            //console.log(\"---------------\")\r\n");
      out.write("            // if need not change L, R\r\n");
      out.write("            if(!changeLRFlag) { // L -> L or R -> R\r\n");
      out.write("            	// change lineID DB (directly connected from selected item)\r\n");
      out.write("                for(var j=0; j<lines.length; j++) {\r\n");
      out.write("                    var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("                    var fromTo = beforeItemID + \"To\";\r\n");
      out.write("                    if(lines[j].id.indexOf(fromTo) > -1) {\r\n");
      out.write("                       var line = document.getElementById(lines[j].id);\r\n");
      out.write("                       sql = \"update line set lineID='\"+afterItemID+\"To\"+line.getAttribute(\"id\").substring(line.getAttribute(\"id\").indexOf(\"To\")+2, line.getAttribute(\"id\").length)+\"' where lineID='\"+line.getAttribute(\"id\")+\"' and userID='\"+userID+\"'\";\r\n");
      out.write("                       line.id = afterItemID+\"To\"+line.getAttribute(\"id\").substring(line.getAttribute(\"id\").indexOf(\"To\")+2, line.getAttribute(\"id\").length);\r\n");
      out.write("                    }\r\n");
      out.write("                    lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("                    \r\n");
      out.write("                    saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("                    $.ajax({\r\n");
      out.write("                       url: \"saveItemAction.jsp\",\r\n");
      out.write("                       type: \"post\",\r\n");
      out.write("                       cache: false,\r\n");
      out.write("                       data: saveActionForm,\r\n");
      out.write("                       dataType: \"html\",\r\n");
      out.write("                       async: false,\r\n");
      out.write("                       success: function(data) {\r\n");
      out.write("                     	  //console.log(\"success\");\r\n");
      out.write("                          //console.log(data);\r\n");
      out.write("                       },\r\n");
      out.write("                       error: function (request, status, error) {\r\n");
      out.write("                          console.log(error);\r\n");
      out.write("                       }\r\n");
      out.write("                    });\r\n");
      out.write("                    itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                    lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                 }\r\n");
      out.write("            }\r\n");
      out.write("            // else need change L, R\r\n");
      out.write("            else { // L -> R or R -> L\r\n");
      out.write("            	// change itemID, lineID DB by Tree traversal (all child of selected-item)\r\n");
      out.write("            	var stack = [];\r\n");
      out.write("            	var root = afterItemID.substring(afterItemID.indexOf(\"_\")+1, afterItemID.length-1);\r\n");
      out.write("            	var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("            	var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("            	var itemP = root + \"_\";\r\n");
      out.write("            	var isL = false;\r\n");
      out.write("            	var stackDone =	[];\r\n");
      out.write("            	\r\n");
      out.write("            	stack.push(afterItemID);\r\n");
      out.write("            	if(afterItemID.substring(afterItemID.length-1, afterItemID.length) == \"R\") {\r\n");
      out.write("            		isL = true;\r\n");
      out.write("            	}\r\n");
      out.write("            	\r\n");
      out.write("            	//console.log(\"1. \" + stack + \" \" + root + \" \" + itemP);\r\n");
      out.write("            	while(true) {\r\n");
      out.write("            		var j=0;\r\n");
      out.write("                	for(j=0; j<items.length; j++) {\r\n");
      out.write("                        if(items[j].id.indexOf(itemP) > -1) {\r\n");
      out.write("                            var item = document.getElementById(items[j].id);\r\n");
      out.write("                            if(stackDone.indexOf(item.id) == -1) {\r\n");
      out.write("                                stack.push(item.id);\r\n");
      out.write("                                itemP = item.id.substring(item.id.indexOf(\"_\")+1, item.id.length-1) + \"_\";\r\n");
      out.write("                                break;\r\n");
      out.write("                            }\r\n");
      out.write("                         }\r\n");
      out.write("                	}\r\n");
      out.write("                	//console.log(\"2. \" + stack + \" \" + itemP);\r\n");
      out.write("                	\r\n");
      out.write("                	if(j == items.length && itemP == root+\"_\") {\r\n");
      out.write("                		//console.log(\"while OUT\");\r\n");
      out.write("                		break;\r\n");
      out.write("                	}\r\n");
      out.write("                	\r\n");
      out.write("                	if(j == items.length) {\r\n");
      out.write("                		//console.log(\"(1)\");\r\n");
      out.write("                		var leaf = document.getElementById(stack.pop());\r\n");
      out.write("                		if(isL) {\r\n");
      out.write("                			//console.log(\"(2L)\");\r\n");
      out.write("                            sql = \"update item set itemID='\" + leaf.id.substring(0, leaf.id.length-1)+\"R\" + \"' where itemID='\"+ leaf.id +\"'\";\r\n");
      out.write("                            itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("                			leaf.id = leaf.id.substring(0, leaf.id.length-1) + \"R\";\r\n");
      out.write("                			\r\n");
      out.write("                        	for(var j=0; j<lines.length; j++) {\r\n");
      out.write("                                if(lines[j].id.indexOf(\"To\" + leaf.id.substring(0, leaf.id.length-1)) > -1) {\r\n");
      out.write("                                    var line = document.getElementById(lines[j].id);\r\n");
      out.write("    		                        sql = \"update line set lineID='\"+ line.id.substring(0, line.id.indexOf(\"To\")-1)+\"RTo\"+line.id.substring(line.id.indexOf(\"To\")+2, line.id.length-1)+\"R\" +\"' where lineID='\"+ line.id +\"'\";\r\n");
      out.write("    		                        lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("    								line.id = line.id.substring(0, line.id.indexOf(\"To\")-1) + \"RTo\" + line.id.substring(line.id.indexOf(\"To\")+2, line.id.length-1) + \"R\";\r\n");
      out.write("    		                        \r\n");
      out.write("    								itemP = line.id.substring(line.id.indexOf(\"To\")+2, line.id.length);\r\n");
      out.write("    								itemP = itemP.substring(0, itemP.indexOf(\"_\")) + \"_\";\r\n");
      out.write("    								stackDone.push(line.id.substring(line.id.indexOf(\"To\")+2, line.id.length));\r\n");
      out.write("    								//console.log(itemSql.getAttribute(\"value\"));\r\n");
      out.write("    								//console.log(lineSql.getAttribute(\"value\"));\r\n");
      out.write("                                    break;\r\n");
      out.write("                                 }\r\n");
      out.write("                        	}\r\n");
      out.write("                		}\r\n");
      out.write("                		else {\r\n");
      out.write("                			//console.log(\"(2R)\");\r\n");
      out.write("                            sql = \"update item set itemID='\" + leaf.id.substring(0, leaf.id.length-1)+\"L\" + \"' where itemID='\"+ leaf.id +\"'\";\r\n");
      out.write("                            itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("                			leaf.id = leaf.id.substring(0, leaf.id.length-1) + \"L\";\r\n");
      out.write("                            \r\n");
      out.write("                        	for(var j=0; j<lines.length; j++) {\r\n");
      out.write("                                if(lines[j].id.indexOf(\"To\" + leaf.id.substring(0, leaf.id.length-1)) > -1) {\r\n");
      out.write("                                    var line = document.getElementById(lines[j].id);\r\n");
      out.write("    		                        sql = \"update line set lineID='\"+ line.id.substring(0, line.id.indexOf(\"To\")-1)+\"LTo\"+line.id.substring(line.id.indexOf(\"To\")+2, line.id.length-1)+\"L\" +\"' where lineID='\"+ line.id +\"'\";\r\n");
      out.write("    		                        lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("    								line.id = line.id.substring(0, line.id.indexOf(\"To\")-1) + \"LTo\" + line.id.substring(line.id.indexOf(\"To\")+2, line.id.length-1) + \"L\";\r\n");
      out.write("    		                        \r\n");
      out.write("    								itemP = line.id.substring(line.id.indexOf(\"To\")+2, line.id.length);\r\n");
      out.write("    								itemP = itemP.substring(0, itemP.indexOf(\"_\")) + \"_\";\r\n");
      out.write("    								stackDone.push(line.id.substring(line.id.indexOf(\"To\")+2, line.id.length));\r\n");
      out.write("    								//console.log(itemSql.getAttribute(\"value\"));\r\n");
      out.write("    								//console.log(lineSql.getAttribute(\"value\"));\r\n");
      out.write("                                    break;\r\n");
      out.write("                                 }\r\n");
      out.write("                        	}\r\n");
      out.write("                		}\r\n");
      out.write("                		\r\n");
      out.write("                		//console.log(\"(3Ajax)\");\r\n");
      out.write("                        saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                           url: \"saveItemAction.jsp\",\r\n");
      out.write("                           type: \"post\",\r\n");
      out.write("                           cache: false,\r\n");
      out.write("                           data: saveActionForm,\r\n");
      out.write("                           dataType: \"html\",\r\n");
      out.write("                           async: false,\r\n");
      out.write("                           success: function(data) {\r\n");
      out.write("                         	  //console.log(\"success\");\r\n");
      out.write("                              //console.log(data);\r\n");
      out.write("                           },\r\n");
      out.write("                           error: function (request, status, error) {\r\n");
      out.write("                              console.log(error);\r\n");
      out.write("                           }\r\n");
      out.write("                        });\r\n");
      out.write("                        itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                        lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                	}\r\n");
      out.write("					//console.log(\"End---------------\");\r\n");
      out.write("            	}\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("              // change selected-item to parent-item\r\n");
      out.write("              if(e.target.className == \"item\" || e.target.className == \"grades\") { \r\n");
      out.write("                 var afterID = \"\";\r\n");
      out.write("               if(fromID == \"\") {\r\n");
      out.write("                   var after = document.getElementById(e.target.id);\r\n");
      out.write("                   after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("               }\r\n");
      out.write("               else if(e.target.id != fromID) {\r\n");
      out.write("                   var before = document.getElementById(fromID);\r\n");
      out.write("                   before.style.border = \"2px solid #828282\";\r\n");
      out.write("\r\n");
      out.write("                   var after = document.getElementById(e.target.id);\r\n");
      out.write("                   after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("                   \r\n");
      out.write("                   afterID = e.target.id;\r\n");
      out.write("               }\r\n");
      out.write("                \r\n");
      out.write("               afterID = e.target.id;\r\n");
      out.write("               fromID = afterID;\r\n");
      out.write("               lastItemX = getX(e.target.id);\r\n");
      out.write("               lastItemY = getY(e.target.id);\r\n");
      out.write("               lastItemW = getW(e.target.id);\r\n");
      out.write("               lastItemH = getH(e.target.id);\r\n");
      out.write("            }\r\n");
      out.write("              \r\n");
      out.write("              // update itemTop, itemLeft DB (calculate relative X, Y)\r\n");
      out.write("              //console.log(e.target.id);\r\n");
      out.write("              //console.log(afterItemID);\r\n");
      out.write("              var itemP = document.getElementById(e.target.id);\r\n");
      out.write("              var itemC = document.getElementById(afterItemID); \r\n");
      out.write("              var topPC = parseFloat(itemC.style.top.substring(0,itemC.style.top.length-2)) - parseFloat(itemP.style.top.substring(0,itemP.style.top.length-2));\r\n");
      out.write("              var leftPC = parseFloat(itemC.style.left.substring(0,itemC.style.left.length-2)) - parseFloat(itemP.style.left.substring(0,itemP.style.left.length-2));\r\n");
      out.write("              //console.log(itemC.style.top.substring(0,itemC.style.top.length-2) + \" \" + itemC.style.left.substring(0,itemC.style.left.length-2));\r\n");
      out.write("              //console.log(itemP.style.top.substring(0,itemP.style.top.length-2) + \" \" + itemP.style.left.substring(0,itemP.style.left.length-2));\r\n");
      out.write("              //console.log(topPC + \" \" + leftPC);\r\n");
      out.write("              sql = \"update item set itemTop='\"+topPC+\"', itemLeft='\"+leftPC+\"' where itemID='\"+itemC.id+\"'\";\r\n");
      out.write("              itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("              saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("              $.ajax({\r\n");
      out.write("                 url: \"saveItemAction.jsp\",\r\n");
      out.write("                 type: \"post\",\r\n");
      out.write("                 cache: false,\r\n");
      out.write("                 data: saveActionForm,\r\n");
      out.write("                 dataType: \"html\",\r\n");
      out.write("                 success: function(data) {\r\n");
      out.write("              	   //console.log(\"success\");\r\n");
      out.write("                    //console.log(data);\r\n");
      out.write("                 },\r\n");
      out.write("                 error: function (request, status, error) {\r\n");
      out.write("                    console.log(error);\r\n");
      out.write("                 }\r\n");
      out.write("              });\r\n");
      out.write("              itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("              lineSql.setAttribute(\"value\", \"\"); \r\n");
      out.write("        }\r\n");
      out.write("        // else just change selected item\r\n");
      out.write("        else {\r\n");
      out.write("        	  // change selected item\r\n");
      out.write("              if(e.target.className == \"item\" || e.target.className == \"grades\") {\r\n");
      out.write("                  if(fromID == \"\") {\r\n");
      out.write("                      var after = document.getElementById(e.target.id);\r\n");
      out.write("                      after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("                  }\r\n");
      out.write("                  else if(e.target.id != fromID) {\r\n");
      out.write("                      var before = document.getElementById(fromID);\r\n");
      out.write("                      before.style.border = \"2px solid #828282\";\r\n");
      out.write("\r\n");
      out.write("                      var after = document.getElementById(e.target.id);\r\n");
      out.write("                      after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("                  }\r\n");
      out.write("                  \r\n");
      out.write("                  fromID = e.target.id;\r\n");
      out.write("                  lastItemX = getX(e.target.id);\r\n");
      out.write("                  lastItemY = getY(e.target.id);\r\n");
      out.write("                  lastItemW = getW(e.target.id);\r\n");
      out.write("                  lastItemH = getH(e.target.id);\r\n");
      out.write("              }\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // get item's X, Y, W, H\r\n");
      out.write("      function getX(id) { \r\n");
      out.write("        var target = document.getElementById(id);\r\n");
      out.write("        return target.getBoundingClientRect().left;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function getY(id) {\r\n");
      out.write("        var target = document.getElementById(id);\r\n");
      out.write("        return target.getBoundingClientRect().top;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function getW(id) {\r\n");
      out.write("        var element = document.getElementById(id);\r\n");
      out.write("        var w = element.offsetWidth;\r\n");
      out.write("        return w;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function getH(id) {\r\n");
      out.write("        var element = document.getElementById(id);\r\n");
      out.write("        var h = element.offsetHeight;\r\n");
      out.write("        return h;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      /*\r\n");
      out.write("      function createItem explain\r\n");
      out.write("      if selected item has New APP item\r\n");
      out.write("        activate and get hidden APP item which is created at HTML\r\n");
      out.write("        check like \"1 New!!\" whether delete or count down before changing innerHTML\r\n");
      out.write("        draw line\r\n");
      out.write("        insert new line, note DB (APP item has item DB but hasn't line, note DB)\r\n");
      out.write("      \r\n");
      out.write("        if selected item still has New APP item\r\n");
      out.write("        put on selected item\r\n");
      out.write("        \r\n");
      out.write("      else if myMap\r\n");
      out.write("        create new item <div>\r\n");
      out.write("        if it's root is grade1,2 put left side else put right side\r\n");
      out.write("        draw line\r\n");
      out.write("        insert item, line, note DB\r\n");
      out.write("        itemCnt++;\r\n");
      out.write("        \r\n");
      out.write("        check if create APP item has connected APP item\r\n");
      out.write("        if exist put like \"1 New!!\" on connected APP item\r\n");
      out.write("      */\r\n");
      out.write("      function createItem() {\r\n");
      out.write("    	  // new 가 있으면 새로 만들지 말고 app에서 만든거 가져오기\r\n");
      out.write("    	  var spanNew = document.getElementById(fromID+\"New\");\r\n");
      out.write("    	  var appItem;\r\n");
      out.write("    	  //console.log(\"------------------------\");\r\n");
      out.write("    	  // if selected item has New APP item\r\n");
      out.write("		  if(spanNew != null) {\r\n");
      out.write("			  //console.log(\"spanNew start\");\r\n");
      out.write("			  var connID;\r\n");
      out.write("			  if(spanNew.id == \"grade1New\"){\r\n");
      out.write("				  connID = \"grade1\";\r\n");
      out.write("			  }\r\n");
      out.write("			  else if(spanNew.id == \"grade2New\"){\r\n");
      out.write("				  connID = \"grade2\";\r\n");
      out.write("			  }\r\n");
      out.write("			  else if(spanNew.id == \"grade3New\"){\r\n");
      out.write("				  connID = \"grade3\";\r\n");
      out.write("			  }\r\n");
      out.write("			  else if(spanNew.id == \"grade4New\"){\r\n");
      out.write("				  connID = \"grade4\";\r\n");
      out.write("			  }\r\n");
      out.write("			  else {\r\n");
      out.write("				  connID = spanNew.id.substring(spanNew.id.indexOf(\"_\")+1, spanNew.id.length-4);\r\n");
      out.write("			  }\r\n");
      out.write("			  //console.log(\"connID: \" + connID);\r\n");
      out.write("			  \r\n");
      out.write("			  // activate and get hidden APP item which is created at HTML\r\n");
      out.write("			  var top;\r\n");
      out.write("			  var left;\r\n");
      out.write("			  for(var i=0; i<itemAppList.length; i++) {\r\n");
      out.write("				  if(itemAppList[i] != null) {\r\n");
      out.write("					  if(itemAppList[i].indexOf(connID+\"_\") > -1) {\r\n");
      out.write("						  //console.log(\"spanNew find\");\r\n");
      out.write("						  appItem = document.getElementById(itemAppList[i]);\r\n");
      out.write("						  appItem.style.display = \"flex\";\r\n");
      out.write("						  \r\n");
      out.write("				          if(appItem.id.indexOf(\"L\") > 0) {\r\n");
      out.write("				        	  //console.log(\"spanNew Left\");\r\n");
      out.write("				        	  appItem.style.top = 20 + 80 + document.documentElement.scrollTop + \"px\";\r\n");
      out.write("				        	  appItem.style.left = 20 + document.documentElement.scrollLeft +\"px\";\r\n");
      out.write("				          }\r\n");
      out.write("				          else {\r\n");
      out.write("				        	  //console.log(\"spanNew Right\");\r\n");
      out.write("				        	  appItem.style.top = 20 + 80 + document.documentElement.scrollTop + \"px\";\r\n");
      out.write("				        	  appItem.style.left = upBox.offsetWidth - 170 + document.documentElement.scrollLeft +\"px\";\r\n");
      out.write("				          }\r\n");
      out.write("				          \r\n");
      out.write("				          delete itemAppList[i];\r\n");
      out.write("				          break;\r\n");
      out.write("					  }\r\n");
      out.write("				  } \r\n");
      out.write("			  }\r\n");
      out.write("			  \r\n");
      out.write("			  // check like \"1 New!!\" whether delete or count down \r\n");
      out.write("			  var spanNewID = spanNew.id.substring(0, spanNew.id.length-3);\r\n");
      out.write("			  if(spanNew.innerText == \"1New!!\") {\r\n");
      out.write("				  //console.log(\"spanNew 1New\");\r\n");
      out.write("				  spanNew.remove();\r\n");
      out.write("			  }\r\n");
      out.write("			  else {\r\n");
      out.write("				  //console.log(\"spanNew 2New\");\r\n");
      out.write("				  var cnt = parseInt(spanNew.innerText.substring(0, 1));\r\n");
      out.write("				  spanNew.innerText = cnt-1 + \"New!!\";\r\n");
      out.write("			  }\r\n");
      out.write("			  //console.log(\"spanNew End\");\r\n");
      out.write("			  \r\n");
      out.write("			  //console.log(spanNewID);\r\n");
      out.write("			  //console.log(appItem.id);\r\n");
      out.write("			  drawLine(spanNewID, appItem.id);\r\n");
      out.write("			  \r\n");
      out.write("			  // insert new line, note DB (APP item has item DB but hasn't line, note DB)\r\n");
      out.write("			  var appLineID = spanNewID + \"To\" + appItem.id;\r\n");
      out.write("			  sql = \"insert into line values('\"+appLineID+\"', '\"+userID+\"')\";\r\n");
      out.write("	          lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("	          saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("	          $.ajax({\r\n");
      out.write("	             url: \"saveItemAction.jsp\",\r\n");
      out.write("	             type: \"post\",\r\n");
      out.write("	             cache: false,\r\n");
      out.write("	             data: saveActionForm,\r\n");
      out.write("	             dataType: \"html\",\r\n");
      out.write("	             success: function(data) {\r\n");
      out.write("	          	 //console.log(\"success\");\r\n");
      out.write("	              //console.log(data);\r\n");
      out.write("	             },\r\n");
      out.write("	             error: function (request, status, error) {\r\n");
      out.write("	               console.log(error);\r\n");
      out.write("	             }\r\n");
      out.write("	          });\r\n");
      out.write("	          itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("	          lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("			  \r\n");
      out.write("	          /*noteItemID.setAttribute(\"value\", itemID); \r\n");
      out.write("	          noteType.setAttribute(\"value\", \"insert\");\r\n");
      out.write("	          noteForm = $(\"#noteForm\").serialize();\r\n");
      out.write("	          $.ajax({\r\n");
      out.write("	             url: \"noteAction.jsp\",\r\n");
      out.write("	             type: \"post\",\r\n");
      out.write("	             cache: false,\r\n");
      out.write("	             data: noteForm,\r\n");
      out.write("	             dataType: \"html\",\r\n");
      out.write("	             success: function(data) {\r\n");
      out.write("	                //console.log(data);\r\n");
      out.write("	          	   //console.log(\"success\");\r\n");
      out.write("	             },\r\n");
      out.write("	             error: function (request, status, error) {\r\n");
      out.write("	                console.log(error);\r\n");
      out.write("	             }\r\n");
      out.write("	          });*/\r\n");
      out.write("	          \r\n");
      out.write("	          // if selected item still has New APP item\r\n");
      out.write("	          for(var i=0; i<itemAppList.length; i++) {\r\n");
      out.write("	        	  var connID = appItem.id.substring(appItem.id.indexOf(\"_\")+1, appItem.id.length-1);\r\n");
      out.write("	        	  var cnt = 0;\r\n");
      out.write("	        	  if(itemAppList[i] != null) {\r\n");
      out.write("		        	  if(itemAppList[i].indexOf(connID) > -1) {\r\n");
      out.write("		        		  cnt = cnt + 1;\r\n");
      out.write("		        	  }\r\n");
      out.write("	        	  }\r\n");
      out.write("	          }\r\n");
      out.write("	          // put on selected item\r\n");
      out.write("	          //console.log(itemAppDict);\r\n");
      out.write("	          if(cnt > 0) {\r\n");
      out.write("	        	  var spanNew = document.getElementById(appItem.id+\"New\");\r\n");
      out.write("	        	  spanNew.style.top = parseFloat(appItem.style.top.substring(0, appItem.style.top.length-2)) - 25 + \"px\"; \r\n");
      out.write("	        	  spanNew.style.left = appItem.style.left;\r\n");
      out.write("	          }\r\n");
      out.write("		  }\r\n");
      out.write("    	  // else if myMap\r\n");
      out.write("		  else if(isMyMap) {\r\n");
      out.write("            const newDiv = document.createElement('div');\r\n");
      out.write("            itemID = \"item\" + itemCnt;\r\n");
      out.write("\r\n");
      out.write("            var str = document.getElementById(fromID);\r\n");
      out.write("            if(str.id.indexOf(\"_\") <= -1) {\r\n");
      out.write("                  if(str.id.indexOf(\"grade1\") > -1) {\r\n");
      out.write("                    itemID = \"grade1_\" + itemID + \"L\";\r\n");
      out.write("                  }\r\n");
      out.write("                  else if(str.id.indexOf(\"grade2\") > -1) {\r\n");
      out.write("                    itemID = \"grade2_\" + itemID + \"L\";\r\n");
      out.write("                  }\r\n");
      out.write("                  else if(str.id.indexOf(\"grade3\") > -1) {\r\n");
      out.write("                    itemID = \"grade3_\" + itemID + \"R\";\r\n");
      out.write("                  }\r\n");
      out.write("                  else if(str.id.indexOf(\"grade4\") > -1) {\r\n");
      out.write("                    itemID = \"grade4_\" + itemID + \"R\";\r\n");
      out.write("                  }\r\n");
      out.write("            }\r\n");
      out.write("            else if(str.id.indexOf(\"_\") > -1) {\r\n");
      out.write("               itemID = str.id.substring(str.id.indexOf(\"_\")+1, str.id.length-1) + \"_\" + itemID + str.id.substring(str.id.length-1, str.id.length);\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("			// create new item <div>\r\n");
      out.write("            newDiv.setAttribute(\"class\", \"item\");\r\n");
      out.write("            newDiv.setAttribute(\"id\", itemID);\r\n");
      out.write("            toID = itemID;\r\n");
      out.write("\r\n");
      out.write("            newDiv.setAttribute(\"draggable\", \"true\");\r\n");
      out.write("            newDiv.setAttribute(\"ondragstart\", \"dragStart(event)\");\r\n");
      out.write("            newDiv.setAttribute(\"ondrag\", \"onDrag(event)\");\r\n");
      out.write("            newDiv.setAttribute(\"ondragover\", \"allowDrop(event)\");\r\n");
      out.write("            newDiv.setAttribute(\"ondrop\", \"drop(event)\");\r\n");
      out.write("            newDiv.setAttribute(\"onclick\", \"clicked(event)\");\r\n");
      out.write("            newDiv.setAttribute(\"ondblclick\", \"popup()\");\r\n");
      out.write("            newDiv.setAttribute(\"onmousedown\", \"mouseDown(event)\");\r\n");
      out.write("            newDiv.setAttribute(\"onmouseup\", \"mouseUp(event)\");\r\n");
      out.write("            newDiv.setAttribute(\"oncontextmenu\", \"contextmenu(event)\");\r\n");
      out.write("            \r\n");
      out.write("            // if it's root is grade1,2 put left side else put right side\r\n");
      out.write("            var top;\r\n");
      out.write("            var left;\r\n");
      out.write("            if(itemID.indexOf(\"L\") > 0) {\r\n");
      out.write("                top = 20 + 80 + document.documentElement.scrollTop + \"px\";\r\n");
      out.write("                left = 20 + document.documentElement.scrollLeft +\"px\";\r\n");
      out.write("            }\r\n");
      out.write("            else {\r\n");
      out.write("                top = 20 + 80 + document.documentElement.scrollTop + \"px\";\r\n");
      out.write("                left = upBox.offsetWidth - 170 + document.documentElement.scrollLeft +\"px\";\r\n");
      out.write("            }\r\n");
      out.write("            newDiv.style.top = top;\r\n");
      out.write("            newDiv.style.left = left;\r\n");
      out.write("\r\n");
      out.write("            mainBox.appendChild(newDiv); \r\n");
      out.write("            drawLine(fromID, itemID);\r\n");
      out.write("            \r\n");
      out.write("            // insert line, item, note DB\r\n");
      out.write("            var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("            var toFrom = \"To\" + itemID;\r\n");
      out.write("            for(var j=0; j<lines.length; j++) {\r\n");
      out.write("               if(lines[j].id.indexOf(toFrom) > -1) {\r\n");
      out.write("                  var line = document.getElementById(lines[j].id);\r\n");
      out.write("                  sql = \"insert into line values('\"+line.getAttribute(\"id\")+\"', '\"+userID+\"')\";\r\n");
      out.write("               }\r\n");
      out.write("            }\r\n");
      out.write("            lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("            \r\n");
      out.write("            var itemP = document.getElementById(fromID);\r\n");
      out.write("            var itemC = document.getElementById(itemID); \r\n");
      out.write("            var topPC = parseFloat(itemC.style.top.substring(0,itemC.style.top.length-2)) - parseFloat(itemP.style.top.substring(0,itemP.style.top.length-2));\r\n");
      out.write("            var leftPC = parseFloat(itemC.style.left.substring(0,itemC.style.left.length-2)) - parseFloat(itemP.style.left.substring(0,itemP.style.left.length-2));\r\n");
      out.write("            //console.log(itemC.style.top.substring(0,itemC.style.top.length-2) + \" \" + itemC.style.left.substring(0,itemC.style.left.length-2));\r\n");
      out.write("            //console.log(itemP.style.top.substring(0,itemP.style.top.length-2) + \" \" + itemP.style.left.substring(0,itemP.style.left.length-2));\r\n");
      out.write("            //console.log(topPC + \" \" + leftPC);\r\n");
      out.write("            sql = \"insert into item values ('\"+itemID+\"', '\" + topPC + \"', '\" + leftPC + \"',  '\"+userID+\"', '', \"+itemCnt+\", '150px', '50px')\";\r\n");
      out.write("            itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("            saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: \"saveItemAction.jsp\",\r\n");
      out.write("               type: \"post\",\r\n");
      out.write("               cache: false,\r\n");
      out.write("               data: saveActionForm,\r\n");
      out.write("               dataType: \"html\",\r\n");
      out.write("               success: function(data) {\r\n");
      out.write("            	   //console.log(\"success\");\r\n");
      out.write("                  //console.log(data);\r\n");
      out.write("               },\r\n");
      out.write("               error: function (request, status, error) {\r\n");
      out.write("                  console.log(error);\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("            itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("            lineSql.setAttribute(\"value\", \"\"); \r\n");
      out.write("            \r\n");
      out.write("            noteItemID.setAttribute(\"value\", itemID); \r\n");
      out.write("            noteType.setAttribute(\"value\", \"insert\");\r\n");
      out.write("            noteForm = $(\"#noteForm\").serialize();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: \"noteAction.jsp\",\r\n");
      out.write("               type: \"post\",\r\n");
      out.write("               cache: false,\r\n");
      out.write("               data: noteForm,\r\n");
      out.write("               dataType: \"html\",\r\n");
      out.write("               success: function(data) {\r\n");
      out.write("                  //console.log(data);\r\n");
      out.write("            	   //console.log(\"success\");\r\n");
      out.write("               },\r\n");
      out.write("               error: function (request, status, error) {\r\n");
      out.write("                  console.log(error);\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            //saveFlag = true;\r\n");
      out.write("            //console.log(itemSQL[itemID]);\r\n");
      out.write("            itemCnt = itemCnt + 1;\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	// check new!! \r\n");
      out.write("        var backID = itemID.substring(itemID.indexOf(\"_\"+1, itemID.length-1));\r\n");
      out.write("        const newDiv = document.createElement('div');\r\n");
      out.write("        \r\n");
      out.write("           // check if create APP item has connected APP item\r\n");
      out.write("           // if exist put like \"1 New!!\" on connected APP item\r\n");
      out.write("	   	   if(backID in itemAppDict) {\r\n");
      out.write("	   		   //console.log(\"create new\");\r\n");
      out.write("	           newDiv.setAttribute(\"class\", \"new\");\r\n");
      out.write("	           newDiv.setAttribute(\"id\", itemID+\"New\");\r\n");
      out.write("	           newDiv.style.top = parseFloat(item.style.top.substring(0, item.style.top.length-2)) - 25 + \"px\";\r\n");
      out.write("	           newDiv.style.left = item.style.left;\r\n");
      out.write("	           newDiv.innerText = itemAppDict[backID] + \"New!!\";\r\n");
      out.write("	           \r\n");
      out.write("	           mainBox.appendChild(newDiv);\r\n");
      out.write("			   delete itemAppDict[backID];\r\n");
      out.write("		   }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // change selected item\r\n");
      out.write("      function dragStart(event) {\r\n");
      out.write("        event.dataTransfer.setData(\"ID\", event.target.id);\r\n");
      out.write("      \r\n");
      out.write("        if(fromID != \"\"){\r\n");
      out.write("            var before = document.getElementById(fromID);\r\n");
      out.write("            before.style.border = \"2px solid #828282\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        var after = document.getElementById(event.target.id);\r\n");
      out.write("        after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      /*\r\n");
      out.write("      function drop explain\r\n");
      out.write("      if myMap\r\n");
      out.write("        if drop on item or grades\r\n");
      out.write("          change selected itemID\r\n");
      out.write("          change(): delete item's line and set changeParent flag\r\n");
      out.write("          clicked(event): do change parent action\r\n");
      out.write("        else drop on blank space\r\n");
      out.write("          check overflow\r\n");
      out.write("          change position selected item X,Y\r\n");
      out.write("          re-draw selected item's line\r\n");
      out.write("          update selected item X,Y DB\r\n");
      out.write("          \r\n");
      out.write("          re-draw connected lines, items backward of selected item\r\n");
      out.write("          update connected lines, items DB\r\n");
      out.write("          \r\n");
      out.write("          if selected item has New APP item position text \"1 New!!\" \r\n");
      out.write("      */\r\n");
      out.write("      function drop(event) {\r\n");
      out.write("    	  var id = event.dataTransfer.getData(\"ID\");\r\n");
      out.write("          var item = document.getElementById(id);\r\n");
      out.write("          var spanNew = document.getElementById(id+\"New\");\r\n");
      out.write("          var afterTop;\r\n");
      out.write("          var afterLeft;\r\n");
      out.write("          //console.log(item.id);\r\n");
      out.write("          //console.log(spanNew.id);\r\n");
      out.write("          \r\n");
      out.write("         // if myMap\r\n");
      out.write("    	 if(isMyMap) {\r\n");
      out.write("             event.preventDefault();\r\n");
      out.write("             var upBox = document.getElementById(\"up_box\");\r\n");
      out.write("             \r\n");
      out.write("             // if drop on item or grades\r\n");
      out.write("             if(item.id != event.target.id && event.target.className == \"item\" || item.id != event.target.id && event.target.className == \"grades\") {\r\n");
      out.write("                // change selected itemID\r\n");
      out.write("                // change(): delete item's line and set changeParent flag\r\n");
      out.write("                // clicked(event): do change parent action\r\n");
      out.write("            	fromID = id;\r\n");
      out.write("                change();\r\n");
      out.write("                clicked(event);\r\n");
      out.write("             }\r\n");
      out.write("             // else drop on blank space\r\n");
      out.write("             else {\r\n");
      out.write("                afterTop = (mouseY - upBox.offsetHeight - item.clientHeight/2 + 80 + document.documentElement.scrollTop).toString() + \"px\";\r\n");
      out.write("                afterLeft = (mouseX - item.clientWidth/2 + document.documentElement.scrollLeft).toString() + \"px\";\r\n");
      out.write("                \r\n");
      out.write("                var afterX = parseInt(afterLeft.substring(0, afterLeft.length-2));\r\n");
      out.write("                var afterY = parseInt(afterTop.substring(0, afterTop.length-2));\r\n");
      out.write("                var itemW = parseInt(item.style.width.substring(0, item.style.width.length-2));\r\n");
      out.write("                var itemH = parseInt(item.style.height.substring(0, item.style.height.length-2));\r\n");
      out.write("          	   //mainWrap.style.width = screen.availWidth*2.3 + \"px\";\r\n");
      out.write("        	   //mainWrap.style.height = screen.availHeight*4 + \"px\";\r\n");
      out.write("                // top overflow\r\n");
      out.write("                if(afterY < 80) {\r\n");
      out.write("                	afterTop = \"80px\";\r\n");
      out.write("                }\r\n");
      out.write("                // right overflow\r\n");
      out.write("                if(afterX+itemW > screen.availWidth*2.3) {\r\n");
      out.write("                	afterLeft = screen.availWidth*2.3 - itemW + \"px\";\r\n");
      out.write("                }\r\n");
      out.write("                // left overflow\r\n");
      out.write("                if(afterX < 0) {\r\n");
      out.write("                	afterLeft = \"0px\";\r\n");
      out.write("                }\r\n");
      out.write("                // bottom overflow\r\n");
      out.write("                if(afterY+itemH > screen.availHeight*4) {\r\n");
      out.write("                	afterTop = screen.availHeight*4 - itemH + \"px\";\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("                //saveFlag = true;\r\n");
      out.write("                \r\n");
      out.write("                // change position selected item X,Y\r\n");
      out.write("                mouseX = mouseX - item.clientWidth/2 + document.documentElement.scrollLeft;\r\n");
      out.write("                mouseY = mouseY - upBox.offsetHeight - item.clientHeight/2 + 80 + document.documentElement.scrollTop;\r\n");
      out.write("                item.style.top = afterTop;\r\n");
      out.write("                item.style.left = afterLeft;\r\n");
      out.write("                \r\n");
      out.write("                // re-draw selected item's line\r\n");
      out.write("                var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("                var idTo = id + \"To\";\r\n");
      out.write("                var toId = \"To\" + id;\r\n");
      out.write("                var cnt = 0;\r\n");
      out.write("                for (var i=0; i<lines.length; i++) {\r\n");
      out.write("                  if(lines[i].id.indexOf(toId) != -1) {\r\n");
      out.write("                    fromID = lines[i].id.substring(0, lines[i].id.indexOf(\"To\"));\r\n");
      out.write("                    toID = lines[i].id.substring(lines[i].id.indexOf(\"To\")+2, lines[i].id.length);\r\n");
      out.write("                    var line = document.getElementById(lines[i].id);\r\n");
      out.write("                    line.remove();\r\n");
      out.write("                    drawLine(fromID, toID);\r\n");
      out.write("                  }\r\n");
      out.write("                  else {\r\n");
      out.write("                    cnt += 1;\r\n");
      out.write("                  }\r\n");
      out.write("                }\r\n");
      out.write("                if(cnt == lines.length) {\r\n");
      out.write("                  drawLine(fromID, toID);\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                var itemPId = item.id.substring(0, item.id.indexOf(\"_\"));\r\n");
      out.write("                var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("                //console.log(\"1. \" + itemPId);\r\n");
      out.write("                for(var i=0; i<items.length; i++) {\r\n");
      out.write("                	var item = document.getElementById(items[i].id);\r\n");
      out.write("                	if(item.id.indexOf(\"_\" + itemPId) > 0) {\r\n");
      out.write("                		itemPId = item.id;\r\n");
      out.write("                		//console.log(\"2. \" + itemPId);\r\n");
      out.write("                	}\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                var itemP = document.getElementById(itemPId);\r\n");
      out.write("                var itemPTop = itemP.style.top;\r\n");
      out.write("                var itemPLeft = itemP.style.left;\r\n");
      out.write("                var relTop = parseFloat(afterTop.substring(0, afterTop.length-2)) - parseFloat(itemPTop.substring(0, itemPTop.length-2));\r\n");
      out.write("                var relLeft = parseFloat(afterLeft.substring(0, afterLeft.length-2)) - parseFloat(itemPLeft.substring(0, itemPLeft.length-2));\r\n");
      out.write("                relTop = String(relTop);\r\n");
      out.write("                relLeft = String(relLeft);\r\n");
      out.write("\r\n");
      out.write("             	// update selected item X,Y DB\r\n");
      out.write("                sql = \"update item set itemTop='\"+relTop+\"', itemLeft='\"+relLeft+\"' where itemID='\"+id+\"' and userID='\"+userID+\"'\";;\r\n");
      out.write("                itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("                saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                   url: \"saveItemAction.jsp\",\r\n");
      out.write("                   type: \"post\",\r\n");
      out.write("                   cache: false,\r\n");
      out.write("                   data: saveActionForm,\r\n");
      out.write("                   dataType: \"html\",\r\n");
      out.write("                   success: function(data) {\r\n");
      out.write("                	  //console.log(\"success\");\r\n");
      out.write("                      //console.log(data);\r\n");
      out.write("                   },\r\n");
      out.write("                   error: function (request, status, error) {\r\n");
      out.write("                	  //console.log(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\r\n");
      out.write("                      console.log(error);\r\n");
      out.write("                   }\r\n");
      out.write("                });\r\n");
      out.write("                itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("          \r\n");
      out.write("                // re-draw connected lines, items backward of selected item\r\n");
      out.write("                var arr = [];\r\n");
      out.write("                for (var i=0; i<lines.length; i++) {\r\n");
      out.write("                  if(lines[i].id.indexOf(idTo) != -1) {\r\n");
      out.write("                    fromID = lines[i].id.substring(0, lines[i].id.indexOf(\"To\"));\r\n");
      out.write("                    toID = lines[i].id.substring(lines[i].id.indexOf(\"To\")+2, lines[i].id.length);\r\n");
      out.write("          \r\n");
      out.write("                    arr.push(fromID);\r\n");
      out.write("                    arr.push(toID);\r\n");
      out.write("                  }\r\n");
      out.write("                }\r\n");
      out.write("                for(var i=0; i<arr.length; i += 2) { \r\n");
      out.write("                  var line = document.getElementById(arr[i] + \"To\" + arr[i+1]);\r\n");
      out.write("                  line.remove();\r\n");
      out.write("                  drawLine(arr[i], arr[i+1]);\r\n");
      out.write("\r\n");
      out.write("                  // update connected lines, items DB\r\n");
      out.write("                  line.id.substring(0, line.id.indexOf(\"To\"))\r\n");
      out.write("                  var itemP = document.getElementById(line.id.substring(0, line.id.indexOf(\"To\")));\r\n");
      out.write("                  var itemC = document.getElementById(line.id.substring(line.id.indexOf(\"To\")+2, line.id.length)); \r\n");
      out.write("                  var topPC = parseFloat(itemC.style.top.substring(0,itemC.style.top.length-2)) - parseFloat(itemP.style.top.substring(0,itemP.style.top.length-2));\r\n");
      out.write("                  var leftPC = parseFloat(itemC.style.left.substring(0,itemC.style.left.length-2)) - parseFloat(itemP.style.left.substring(0,itemP.style.left.length-2));\r\n");
      out.write("                  //console.log(itemC.style.top.substring(0,itemC.style.top.length-2) + \" \" + itemC.style.left.substring(0,itemC.style.left.length-2));\r\n");
      out.write("                  //console.log(itemP.style.top.substring(0,itemP.style.top.length-2) + \" \" + itemP.style.left.substring(0,itemP.style.left.length-2));\r\n");
      out.write("                  //console.log(topPC + \" \" + leftPC);\r\n");
      out.write("                  sql = \"update item set itemTop='\"+topPC+\"', itemLeft='\"+leftPC+\"' where itemID='\"+itemC.id+\"'\";\r\n");
      out.write("                  itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("                  saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("                  $.ajax({\r\n");
      out.write("                     url: \"saveItemAction.jsp\",\r\n");
      out.write("                     type: \"post\",\r\n");
      out.write("                     cache: false,\r\n");
      out.write("                     data: saveActionForm,\r\n");
      out.write("                     dataType: \"html\",\r\n");
      out.write("                     success: function(data) {\r\n");
      out.write("                  	   //console.log(\"success\");\r\n");
      out.write("                        //console.log(data);\r\n");
      out.write("                     },\r\n");
      out.write("                     error: function (request, status, error) {\r\n");
      out.write("                        console.log(error);\r\n");
      out.write("                     }\r\n");
      out.write("                  });\r\n");
      out.write("                  itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                  lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                fromID = id;\r\n");
      out.write("             }\r\n");
      out.write("             \r\n");
      out.write("             // if selected item has New APP item position text \"1 New!!\" \r\n");
      out.write("             //console.log(afterTop);\r\n");
      out.write("             //console.log(afterLeft);\r\n");
      out.write("             if(spanNew != null) {\r\n");
      out.write("           	  spanNew.style.top = parseFloat(afterTop.substring(0, afterTop.length-2)) - 25 + \"px\";\r\n");
      out.write("           	  spanNew.style.left = afterLeft; \r\n");
      out.write("             }\r\n");
      out.write("             \r\n");
      out.write("             itemSizeFlag = false;\r\n");
      out.write("    	 }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // allowDrop item and grades\r\n");
      out.write("      function allowDrop(event) {\r\n");
      out.write("    	if(isMyMap) {\r\n");
      out.write("            event.preventDefault();\r\n");
      out.write("    	}\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // trace current mouse X,Y\r\n");
      out.write("      function onDrag(event) {\r\n");
      out.write("        mouseX = event.clientX;\r\n");
      out.write("        mouseY = event.clientY;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // draw line fromID to toID by L,R\r\n");
      out.write("      function drawLine(fromID, toID) { \r\n");
      out.write("        if(fromID == \"grade1\") {\r\n");
      out.write("          const newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n");
      out.write("          var lineID = fromID + \"To\" + toID;\r\n");
      out.write("          newLine.setAttribute(\"class\", \"itemLines\");\r\n");
      out.write("          newLine.setAttribute(\"id\", lineID);\r\n");
      out.write("          newLine.setAttribute(\"x1\", getItemX(toID)+getW(toID));\r\n");
      out.write("          newLine.setAttribute(\"y1\", getItemY(toID)-getH(toID)/2);\r\n");
      out.write("          newLine.setAttribute(\"x2\", getX(fromID) + document.documentElement.scrollLeft);\r\n");
      out.write("          newLine.setAttribute(\"y2\", getItemY(fromID)-getH(fromID)/2);\r\n");
      out.write("          newLine.style.stroke = \"rgb(170,170,170)\";\r\n");
      out.write("          newLine.style.strokeWidth = \"2\";\r\n");
      out.write("          svg.appendChild(newLine);\r\n");
      out.write("        }\r\n");
      out.write("        else if(fromID == \"grade2\") {\r\n");
      out.write("            const newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n");
      out.write("            var lineID = fromID + \"To\" + toID;\r\n");
      out.write("            newLine.setAttribute(\"class\", \"itemLines\");\r\n");
      out.write("            newLine.setAttribute(\"id\", lineID);\r\n");
      out.write("            newLine.setAttribute(\"x1\", getItemX(toID)+getW(toID));\r\n");
      out.write("            newLine.setAttribute(\"y1\", getItemY(toID)-getH(toID)/2);\r\n");
      out.write("            newLine.setAttribute(\"x2\", getX(fromID) + document.documentElement.scrollLeft);\r\n");
      out.write("            newLine.setAttribute(\"y2\", getItemY(fromID)-getH(fromID)/2);\r\n");
      out.write("            newLine.style.stroke = \"rgb(170,170,170)\";\r\n");
      out.write("            newLine.style.strokeWidth = \"2\";\r\n");
      out.write("            svg.appendChild(newLine);\r\n");
      out.write("        }\r\n");
      out.write("        else if(fromID.indexOf(\"L\") != -1) {\r\n");
      out.write("          const newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n");
      out.write("          var lineID = fromID + \"To\" + toID;\r\n");
      out.write("          newLine.setAttribute(\"class\", \"itemLines\");\r\n");
      out.write("          newLine.setAttribute(\"id\", lineID);\r\n");
      out.write("          newLine.setAttribute(\"x1\", getItemX(toID)+getW(toID));\r\n");
      out.write("          newLine.setAttribute(\"y1\", getItemY(toID)-getH(toID)/2);\r\n");
      out.write("          newLine.setAttribute(\"x2\", getItemX(fromID));\r\n");
      out.write("          newLine.setAttribute(\"y2\", getItemY(fromID)-getH(fromID)/2);\r\n");
      out.write("          newLine.style.stroke = \"rgb(170,170,170)\";\r\n");
      out.write("          newLine.style.strokeWidth = \"2\";\r\n");
      out.write("          svg.appendChild(newLine);\r\n");
      out.write("        }\r\n");
      out.write("        else if(fromID == \"grade3\") {\r\n");
      out.write("          const newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n");
      out.write("          var lineID = fromID + \"To\" + toID;\r\n");
      out.write("          newLine.setAttribute(\"class\", \"itemLines\");\r\n");
      out.write("          newLine.setAttribute(\"id\", lineID);\r\n");
      out.write("          newLine.setAttribute(\"x1\", getX(fromID)+getW(fromID) + document.documentElement.scrollLeft);\r\n");
      out.write("          newLine.setAttribute(\"y1\", getY(fromID)+getH(fromID)/2 + document.documentElement.scrollTop);\r\n");
      out.write("          newLine.setAttribute(\"x2\", getItemX(toID));\r\n");
      out.write("          newLine.setAttribute(\"y2\", getItemY(toID)-getH(toID)/2);\r\n");
      out.write("          newLine.style.stroke = \"rgb(170,170,170)\";\r\n");
      out.write("          newLine.style.strokeWidth = \"2\";\r\n");
      out.write("          svg.appendChild(newLine);\r\n");
      out.write("        }\r\n");
      out.write("        else if(fromID == \"grade4\") {\r\n");
      out.write("            const newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n");
      out.write("            var lineID = fromID + \"To\" + toID;\r\n");
      out.write("            newLine.setAttribute(\"class\", \"itemLines\");\r\n");
      out.write("            newLine.setAttribute(\"id\", lineID);\r\n");
      out.write("            newLine.setAttribute(\"x1\", getX(fromID)+getW(fromID) + document.documentElement.scrollLeft);\r\n");
      out.write("            newLine.setAttribute(\"y1\", getY(fromID)+getH(fromID)/2 + document.documentElement.scrollTop);\r\n");
      out.write("            newLine.setAttribute(\"x2\", getItemX(toID));\r\n");
      out.write("            newLine.setAttribute(\"y2\", getItemY(toID)-getH(toID)/2);\r\n");
      out.write("            newLine.style.stroke = \"rgb(170,170,170)\";\r\n");
      out.write("            newLine.style.strokeWidth = \"2\";\r\n");
      out.write("            svg.appendChild(newLine);\r\n");
      out.write("        }\r\n");
      out.write("        else if(fromID.indexOf(\"R\") != -1) {\r\n");
      out.write("          const newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n");
      out.write("          var lineID = fromID + \"To\" + toID;\r\n");
      out.write("          newLine.setAttribute(\"class\", \"itemLines\");\r\n");
      out.write("          newLine.setAttribute(\"id\", lineID);\r\n");
      out.write("          newLine.setAttribute(\"x1\", getItemX(fromID)+getW(fromID));\r\n");
      out.write("          newLine.setAttribute(\"y1\", getItemY(fromID)-getH(fromID)/2);\r\n");
      out.write("          newLine.setAttribute(\"x2\", getItemX(toID));\r\n");
      out.write("          newLine.setAttribute(\"y2\", getItemY(toID)-getH(toID)/2);\r\n");
      out.write("          newLine.style.stroke = \"rgb(170,170,170)\";\r\n");
      out.write("          newLine.style.strokeWidth = \"2\";\r\n");
      out.write("          svg.appendChild(newLine);\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // draw line with pointed start X,Y and end X,Y\r\n");
      out.write("      function drawLineByID(id, x1, y1, x2, y2) { \r\n");
      out.write("        var newLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n");
      out.write("        newLine.setAttribute(\"class\", \"lines\");\r\n");
      out.write("        newLine.setAttribute(\"id\", id);\r\n");
      out.write("        newLine.setAttribute(\"x1\", x1);\r\n");
      out.write("        newLine.setAttribute(\"y1\", y1);\r\n");
      out.write("        newLine.setAttribute(\"x2\", x2);\r\n");
      out.write("        newLine.setAttribute(\"y2\", y2);\r\n");
      out.write("        newLine.style.stroke = \"rgb(170,170,170)\";\r\n");
      out.write("        newLine.style.strokeWidth = \"2\";\r\n");
      out.write("        svg.appendChild(newLine);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      /*\r\n");
      out.write("      function delete explain\r\n");
      out.write("      check one more time are you sure delete?\r\n");
      out.write("      delete selected item, item's line DB\r\n");
      out.write("      delete selected item file DB, folder\r\n");
      out.write("      delete selected item note DB\r\n");
      out.write("      delete selected item\r\n");
      out.write("      \r\n");
      out.write("      delete connected item, item's lines\r\n");
      out.write("      delete connected item, line DB\r\n");
      out.write("      delete connected item file DB\r\n");
      out.write("      delete connected item note DB\r\n");
      out.write("      */\r\n");
      out.write("      function deleteItem(fromID) {\r\n");
      out.write("    	  // check one more time are you sure delete?\r\n");
      out.write("          if(confirm(\"노드를 삭제하시겠습니까?\")) {\r\n");
      out.write("               var arrItems = [];\r\n");
      out.write("               arrItems.push(fromID);\r\n");
      out.write("               var item = document.getElementById(fromID);\r\n");
      out.write("            \r\n");
      out.write("           // delete selected item, item's line DB\r\n");
      out.write("           var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("           var toFrom = \"To\" + item.id;\r\n");
      out.write("           for(var j=0; j<lines.length; j++) {\r\n");
      out.write("              if(lines[j].id.indexOf(toFrom) > -1) {\r\n");
      out.write("                 var line = document.getElementById(lines[j].id);\r\n");
      out.write("                 sql = \"delete from line where lineID='\"+line.getAttribute(\"id\")+\"' and userID='\"+userID+\"'\";\r\n");
      out.write("              }\r\n");
      out.write("           }\r\n");
      out.write("           lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("            \r\n");
      out.write("            sql = \"delete from item where itemID='\"+item.id+\"' and userID='\"+userID+\"'\";;\r\n");
      out.write("            itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("            saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: \"saveItemAction.jsp\",\r\n");
      out.write("               type: \"post\",\r\n");
      out.write("               cache: false,\r\n");
      out.write("               data: saveActionForm,\r\n");
      out.write("               dataType: \"html\",\r\n");
      out.write("               success: function(data) {\r\n");
      out.write("            	   //console.log(\"success\");\r\n");
      out.write("                  //console.log(data);\r\n");
      out.write("               },\r\n");
      out.write("               error: function (request, status, error) {\r\n");
      out.write("                  console.log(error);\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("            itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("            lineSql.setAttribute(\"value\", \"\"); \r\n");
      out.write("            \r\n");
      out.write("            var form = document.getElementById(\"fileForm\");\r\n");
      out.write("            \r\n");
      out.write("            var hiddenField = document.createElement(\"input\");\r\n");
      out.write("            hiddenField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("            hiddenField.setAttribute(\"name\", \"action\");\r\n");
      out.write("            hiddenField.setAttribute(\"value\", \"itemDelete\");\r\n");
      out.write("            form.appendChild(hiddenField);\r\n");
      out.write("            \r\n");
      out.write("            // delete selected item file DB, folder\r\n");
      out.write("            fileChangeID = fromID;\r\n");
      out.write("            fileData.setAttribute(\"value\", fileChangeID);\r\n");
      out.write("            fileForm = $(\"#fileForm\").serialize();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: \"deleteFileAction.jsp\",\r\n");
      out.write("               type: \"post\",\r\n");
      out.write("               cache: false,\r\n");
      out.write("               data: fileForm,\r\n");
      out.write("               dataType: \"html\",\r\n");
      out.write("               success: function(data) {\r\n");
      out.write("                  //console.log(data);\r\n");
      out.write("            	   //console.log(\"success\");\r\n");
      out.write("               },\r\n");
      out.write("               error: function (request, status, error) {\r\n");
      out.write("                  console.log(error);\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("			// delete selected item note DB\r\n");
      out.write("            noteItemID.setAttribute(\"value\", fromID);\r\n");
      out.write("            noteType.setAttribute(\"value\", \"delete\");\r\n");
      out.write("            noteForm = $(\"#noteForm\").serialize();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("               url: \"noteAction.jsp\",\r\n");
      out.write("               type: \"post\",\r\n");
      out.write("               cache: false,\r\n");
      out.write("               data: noteForm,\r\n");
      out.write("               dataType: \"html\",\r\n");
      out.write("               success: function(data) {\r\n");
      out.write("                  //console.log(data);\r\n");
      out.write("            	   //console.log(\"success\");\r\n");
      out.write("               },\r\n");
      out.write("               error: function (request, status, error) {\r\n");
      out.write("                  console.log(error);\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            // delete selected item\r\n");
      out.write("            item.remove(); \r\n");
      out.write("            \r\n");
      out.write("            //-------------------------------------------------------------------------\r\n");
      out.write("            // delete connected item, item's lines\r\n");
      out.write("            var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("            var toFrom = \"To\" + fromID;\r\n");
      out.write("             for (var i=0; i<lines.length; i++) {\r\n");
      out.write("                 if(lines[i].id.indexOf(toFrom) > -1) {\r\n");
      out.write("                   var line = document.getElementById(lines[i].id);\r\n");
      out.write("                   lineSQL[line.id] = \"delete from line where lineID='\"+line.getAttribute(\"id\")+\"'\";\r\n");
      out.write("                   line.remove();\r\n");
      out.write("                   break;\r\n");
      out.write("                 }\r\n");
      out.write("             }\r\n");
      out.write("            \r\n");
      out.write("             while(true) {\r\n");
      out.write("                var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("                var target = arrItems[arrItems.length-1];\r\n");
      out.write("                target = target.substring(target.indexOf(\"_\")+1, target.length-1);\r\n");
      out.write("                \r\n");
      out.write("                if(items.length < 1) {\r\n");
      out.write("                   break;\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                 for (var i=0; i<items.length; i++) {\r\n");
      out.write("                     if(items[i].id.indexOf(target) > -1) {\r\n");
      out.write("                         lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("                         fromTo = arrItems[arrItems.length-1] + \"To\";\r\n");
      out.write("                         for (var j=0; j<lines.length; j++) {\r\n");
      out.write("                             if(lines[j].id.indexOf(fromTo) > -1) {\r\n");
      out.write("                               var line = document.getElementById(lines[j].id);\r\n");
      out.write("                               lineSQL[line.id] = \"delete from line where lineID='\"+line.getAttribute(\"id\")+\"'\";\r\n");
      out.write("                               sql = \"delete from line where lineID='\"+line.id+\"' and userID='\"+userID+\"'\";\r\n");
      out.write("                               lineSql.setAttribute(\"value\", sql);\r\n");
      out.write("                               line.remove();\r\n");
      out.write("                               break;\r\n");
      out.write("                             }\r\n");
      out.write("                         }\r\n");
      out.write("                        \r\n");
      out.write("                       arrItems.push(items[i].id);\r\n");
      out.write("                       item = document.getElementById(items[i].id);\r\n");
      out.write("                       if(itemSQL[item.id] != null) {\r\n");
      out.write("                             itemSQL[item.id] = itemSQL[item.id] + \"delete from item where itemID='\"+item.id+\"'\";\r\n");
      out.write("                       }\r\n");
      out.write("                       else{\r\n");
      out.write("                            itemSQL[item.id] = \"delete from item where itemID='\"+item.id+\"'\";\r\n");
      out.write("                       }\r\n");
      out.write("                        sql = \"delete from item where itemID='\"+item.id+\"' and userID='\"+userID+\"'\";;\r\n");
      out.write("                        itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("                        item.remove();\r\n");
      out.write("                        \r\n");
      out.write("                        //console.log(\"--------------------------\");\r\n");
      out.write("                        //console.log(\"lineSql: \" + lineSql.getAttribute(\"value\"));\r\n");
      out.write("                        //console.log(\"itemSql: \" + itemSql.getAttribute(\"value\"));\r\n");
      out.write("                        //console.log(\"--------------------------\");\r\n");
      out.write("                        // delete connected item, line DB\r\n");
      out.write("                        saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                           url: \"saveItemAction.jsp\",\r\n");
      out.write("                           type: \"post\",\r\n");
      out.write("                           cache: false,\r\n");
      out.write("                           data: saveActionForm,\r\n");
      out.write("                           dataType: \"html\",\r\n");
      out.write("                           success: function(data) {\r\n");
      out.write("                        	   //console.log(\"success\");\r\n");
      out.write("                              //console.log(data);\r\n");
      out.write("                           },\r\n");
      out.write("                           error: function (request, status, error) {\r\n");
      out.write("                              console.log(error);\r\n");
      out.write("                           }\r\n");
      out.write("                        });\r\n");
      out.write("                        itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                        lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("                        \r\n");
      out.write("                        var form = document.getElementById(\"fileForm\");\r\n");
      out.write("                        \r\n");
      out.write("                        var hiddenField = document.createElement(\"input\");\r\n");
      out.write("                        hiddenField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("                        hiddenField.setAttribute(\"name\", \"action\");\r\n");
      out.write("                        hiddenField.setAttribute(\"value\", \"itemDelete\");\r\n");
      out.write("                        form.appendChild(hiddenField);\r\n");
      out.write("                        \r\n");
      out.write("                        // delete connected item file DB\r\n");
      out.write("                        fileChangeID = item.id;\r\n");
      out.write("                        fileData.setAttribute(\"value\", fileChangeID);\r\n");
      out.write("                        fileForm = $(\"#fileForm\").serialize();\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                           url: \"deleteFileAction.jsp\",\r\n");
      out.write("                           type: \"post\",\r\n");
      out.write("                           cache: false,\r\n");
      out.write("                           data: fileForm,\r\n");
      out.write("                           dataType: \"html\",\r\n");
      out.write("                           success: function(data) {\r\n");
      out.write("                              //console.log(data);\r\n");
      out.write("                        	   //console.log(\"success\");\r\n");
      out.write("                           },\r\n");
      out.write("                           error: function (request, status, error) {\r\n");
      out.write("                              console.log(error);\r\n");
      out.write("                           }\r\n");
      out.write("                        });\r\n");
      out.write("                        \r\n");
      out.write("                        // delete connected item note DB\r\n");
      out.write("                        noteItemID.setAttribute(\"value\", item.id);\r\n");
      out.write("                        noteType.setAttribute(\"value\", \"delete\");\r\n");
      out.write("                        noteForm = $(\"#noteForm\").serialize();\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                           url: \"noteAction.jsp\",\r\n");
      out.write("                           type: \"post\",\r\n");
      out.write("                           cache: false,\r\n");
      out.write("                           data: noteForm,\r\n");
      out.write("                           dataType: \"html\",\r\n");
      out.write("                           success: function(data) {\r\n");
      out.write("                              //console.log(data);\r\n");
      out.write("                        	   //console.log(\"success\");\r\n");
      out.write("                           },\r\n");
      out.write("                           error: function (request, status, error) {\r\n");
      out.write("                              console.log(error);\r\n");
      out.write("                           }\r\n");
      out.write("                        });\r\n");
      out.write("                        \r\n");
      out.write("                        break;\r\n");
      out.write("                     }\r\n");
      out.write("\r\n");
      out.write("                     if(i == items.length-1) {\r\n");
      out.write("                        arrItems.pop();\r\n");
      out.write("                     }\r\n");
      out.write("                 }\r\n");
      out.write("         \r\n");
      out.write("                 if(arrItems.length == 0) {\r\n");
      out.write("                    break;\r\n");
      out.write("                 }\r\n");
      out.write("             }\r\n");
      out.write("             \r\n");
      out.write("             \r\n");
      out.write("            //saveFlag = true;\r\n");
      out.write("            //console.log(itemSQL[item.id]);\r\n");
      out.write("            window.fromID = \"\";\r\n");
      out.write("          }\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("      /*\r\n");
      out.write("      function modify explain\r\n");
      out.write("      onkeyup(event) calls modify()\r\n");
      out.write("      change item content\r\n");
      out.write("      update item content DB\r\n");
      out.write("      */\r\n");
      out.write("      // onkeyup(event) calls modify()\r\n");
      out.write("      function modify() {\r\n");
      out.write("    	  if(isMyMap) {\r\n");
      out.write("    		   // change item content\r\n");
      out.write("    	       const inputItem = document.getElementById(\"inputItem\");\r\n");
      out.write("    	       var item = document.getElementById(inputItem.getAttribute(\"name\"));\r\n");
      out.write("    	       var afterContent = inputItem.value;\r\n");
      out.write("    	       \r\n");
      out.write("    	       //saveFlag = true;\r\n");
      out.write("    	       \r\n");
      out.write("    	       // update item content DB\r\n");
      out.write("    	       sql = \"update item set itemContent='\"+afterContent+\"' where itemID='\"+item.id+\"' and userID='\"+userID+\"'\";;\r\n");
      out.write("    	       itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("    	       saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("    	       $.ajax({\r\n");
      out.write("    	          url: \"saveItemAction.jsp\",\r\n");
      out.write("    	          type: \"post\",\r\n");
      out.write("    	          cache: false,\r\n");
      out.write("    	          data: saveActionForm,\r\n");
      out.write("    	          dataType: \"html\",\r\n");
      out.write("    	          success: function(data) {\r\n");
      out.write("    	        	  //console.log(\"success\");\r\n");
      out.write("    	             //console.log(data);\r\n");
      out.write("    	          },\r\n");
      out.write("    	          error: function (request, status, error) {\r\n");
      out.write("    	             console.log(error);\r\n");
      out.write("    	          }\r\n");
      out.write("    	       });\r\n");
      out.write("    	       itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("    	       lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("    	       \r\n");
      out.write("\r\n");
      out.write("    	        item.innerText = inputItem.value;\r\n");
      out.write("    	        inputItem.remove();\r\n");
      out.write("    	  }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // get item X,Y\r\n");
      out.write("      function getItemX(id) { \r\n");
      out.write("        var x = document.getElementById(id).style.left;\r\n");
      out.write("        x = x.substring(0, x.indexOf(\"px\"));\r\n");
      out.write("        x = parseFloat(x);\r\n");
      out.write("        return x;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function getItemY(id) {\r\n");
      out.write("        var y = document.getElementById(id).style.top;\r\n");
      out.write("        y.substring(0, y.indexOf(\"px\"));\r\n");
      out.write("        y = parseFloat(y);\r\n");
      out.write("        y = y + getH(id);\r\n");
      out.write("        return y;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      /*\r\n");
      out.write("      function publicmapAction explain\r\n");
      out.write("      if map is private ask to user and change public\r\n");
      out.write("      if map is public ask to user and change private\r\n");
      out.write("      */\r\n");
      out.write("      function publicMapAction() {\r\n");
      out.write("    	  if(isMyMap) {\r\n");
      out.write("        	  var form = document.getElementById(\"publicMapForm\");\r\n");
      out.write("        	  var hiddenField = document.createElement(\"input\");\r\n");
      out.write("        	  var formData;\r\n");
      out.write("              var btn = document.getElementById(\"publicMap\");\r\n");
      out.write("        	  \r\n");
      out.write("              // if map is private ask to user and change public\r\n");
      out.write("              if(publicmap == 0) {\r\n");
      out.write("                var confirmflag = confirm('공개로 바꾸시겠습니까?');\r\n");
      out.write("                if(confirmflag) {\r\n");
      out.write("                      formData = $(\"#publicMapForm\").serialize();\r\n");
      out.write("                      //console.log(formData);\r\n");
      out.write("                      $.ajax({\r\n");
      out.write("                         url: \"publicmapAction.jsp?userID=\"+userID+\"&publicmap=\"+publicmap,\r\n");
      out.write("                         type: \"post\",\r\n");
      out.write("                         cache: false,\r\n");
      out.write("                         data: formData,\r\n");
      out.write("                         dataType: \"html\",\r\n");
      out.write("                         success: function(data) {\r\n");
      out.write("                            //console.log(data);\r\n");
      out.write("                        	 //console.log(\"success\");\r\n");
      out.write("                         },\r\n");
      out.write("                         error: function (request, status, error) {\r\n");
      out.write("                            console.log(error);\r\n");
      out.write("                         }\r\n");
      out.write("                      });\r\n");
      out.write("                      \r\n");
      out.write("                      publicmap = 1;\r\n");
      out.write("                      btn.innerHTML = \"비공개\";\r\n");
      out.write("                }\r\n");
      out.write("             }\r\n");
      out.write("             // if map is public ask to user and change private\r\n");
      out.write("             else if(publicmap == 1) {\r\n");
      out.write("            	  var password = \"\";\r\n");
      out.write("                  password = prompt('비밀번호를 입력하세요(10자)');\r\n");
      out.write("                  if(password != \"\" && password != null) {\r\n");
      out.write("                      \r\n");
      out.write("                      hiddenField = document.createElement(\"input\");\r\n");
      out.write("                      hiddenField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("                      hiddenField.setAttribute(\"name\", \"password\");\r\n");
      out.write("                      hiddenField.setAttribute(\"value\", password);\r\n");
      out.write("                      form.appendChild(hiddenField);\r\n");
      out.write("\r\n");
      out.write("                      \r\n");
      out.write("                      formData = $(\"#publicMapForm\").serialize();\r\n");
      out.write("                      //console.log(formData);\r\n");
      out.write("                      $.ajax({\r\n");
      out.write("                         url: \"publicmapAction.jsp?userID=\"+userID+\"&publicmap=\"+publicmap,\r\n");
      out.write("                         type: \"post\",\r\n");
      out.write("                         cache: false,\r\n");
      out.write("                         data: formData,\r\n");
      out.write("                         dataType: \"html\",\r\n");
      out.write("                         success: function(data) {\r\n");
      out.write("                             //console.log(data);\r\n");
      out.write("                        	 //console.log(\"success\");\r\n");
      out.write("                         },\r\n");
      out.write("                         error: function (request, status, error) {\r\n");
      out.write("                             console.log(error);\r\n");
      out.write("                         }\r\n");
      out.write("                      });\r\n");
      out.write("                      \r\n");
      out.write("                      publicmap = 0;\r\n");
      out.write("                      btn.innerHTML = \"공개\";\r\n");
      out.write("                 }\r\n");
      out.write("             }\r\n");
      out.write("    	  }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // 여기부터 팝업 조회수 추천\r\n");
      out.write("      // open popup window\r\n");
      out.write("      function popup() {   // 팝업 이벤트\r\n");
      out.write("        var popup_name = fromID;\r\n");
      out.write("        var opwin = window.open('popup.jsp?itemID='+fromID+'&mapID='+mapID, popup_name, 'width=400,height=450,left=300px,top=100px,status=no,scrollbars=yes');\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // delete selected item's line\r\n");
      out.write("      // set change parent flag\r\n");
      out.write("      function change() {\r\n");
      out.write("    	  if(isMyMap) {\r\n");
      out.write("    	        var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("    	        var toFrom = \"To\" + fromID;\r\n");
      out.write("    	        for (var i=0; i<lines.length; i++) {\r\n");
      out.write("    	          if(lines[i].id.indexOf(toFrom) != -1) {\r\n");
      out.write("    	            var line = document.getElementById(lines[i].id);\r\n");
      out.write("    	            lineSQL[line.id] = \"delete from line where lineID='\"+line.getAttribute(\"id\")+\"'\";\r\n");
      out.write("    	            removedLine = line.id;\r\n");
      out.write("    	            line.remove();\r\n");
      out.write("    	            break;\r\n");
      out.write("    	          }\r\n");
      out.write("    	        }\r\n");
      out.write("\r\n");
      out.write("    	        findingParent = 1;\r\n");
      out.write("    	  }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      // 업로드 다운로드 팝업 띄우기\r\n");
      out.write("      // open up/download popup window\r\n");
      out.write("      function upload_download_window() {\r\n");
      out.write("         var up_down_name = fromID;\r\n");
      out.write("         var opwin = window.open('upload_map.jsp?itemID='+fromID+\"&mapID=\"+mapID,up_down_name, \r\n");
      out.write("               'width=400,height=450,left=300px,top=100px,status=no,scrollbars=yes');\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      /*\r\n");
      out.write("      keyup event explain\r\n");
      out.write("      if item or grades is selected\r\n");
      out.write("        if key-up 'a'~'z', 'A'~'Z'\r\n");
      out.write("          if item hasn't content\r\n");
      out.write("            user can modify item content + add content\r\n");
      out.write("            user can finish modifying with button\r\n");
      out.write("          else item has content\r\n");
      out.write("            get item content\r\n");
      out.write("            user can modify item content\r\n");
      out.write("            user can finish modifying with button\r\n");
      out.write("      */ \r\n");
      out.write("      window.addEventListener(\"keyup\", e => {\r\n");
      out.write("    	  if(isMyMap) {\r\n");
      out.write("    		  // if item or grades is selected\r\n");
      out.write("    		  if(fromID != \"grade1\" && fromID != \"grade2\" && fromID != \"grade3\" && fromID != \"grade4\") {\r\n");
      out.write("    			 // if key-up 'a'~'z', 'A'~'Z'\r\n");
      out.write("     	         if(48 <= e.keyCode && e.keyCode <= 57\r\n");
      out.write("         	            || 65 <= e.keyCode && e.keyCode <= 90) {\r\n");
      out.write("     	        	 		// if item hasn't content\r\n");
      out.write("         	                if(document.getElementById(\"inputItem\") == null) {\r\n");
      out.write("         	                    var target = document.getElementById(fromID);\r\n");
      out.write("         	                     var inputItem = document.createElement(\"textarea\");\r\n");
      out.write("         	                     var text = \"\";\r\n");
      out.write("         	                     \r\n");
      out.write("         	                     if(target.innerText == \"\") {\r\n");
      out.write("         	                        text = text + e.key;\r\n");
      out.write("         	                     }\r\n");
      out.write("         	                     else {\r\n");
      out.write("         	                        text = target.innerText + e.key;\r\n");
      out.write("         	                        target.innerText = \"\";\r\n");
      out.write("         	                     }\r\n");
      out.write("         	                     beforeContent = text.substring(0, text.length-1);\r\n");
      out.write("         	                     \r\n");
      out.write("         	                     // user can modify item content + add content\r\n");
      out.write("         	                     inputItem.setAttribute(\"type\", \"text\");\r\n");
      out.write("         	                     inputItem.style.display = \"flex\";\r\n");
      out.write("         	                     inputItem.style.width = \"90%\";\r\n");
      out.write("         	                     inputItem.style.height = \"90%\";\r\n");
      out.write("         	                     inputItem.setAttribute(\"id\", \"inputItem\");\r\n");
      out.write("         	                     inputItem.setAttribute(\"name\", fromID);\r\n");
      out.write("         	                     inputItem.setAttribute(\"rows\", 1);\r\n");
      out.write("         	                     inputItem.setAttribute(\"cols\", 10);\r\n");
      out.write("         	                     \r\n");
      out.write("         	                     target.appendChild(inputItem);\r\n");
      out.write("         	                     inputItem.focus();\r\n");
      out.write("         	                     inputItem.value = text;\r\n");
      out.write("         	                     \r\n");
      out.write("         	                     // user can finish modifying with button\r\n");
      out.write("         	                     var btn = document.createElement(\"button\");\r\n");
      out.write("         	                     btn.setAttribute(\"id\", \"inputBtn\");\r\n");
      out.write("         	                     btn.setAttribute(\"type\", \"button\");\r\n");
      out.write("         	                     btn.style.width = \"50px\";\r\n");
      out.write("         	                     btn.style.height = \"30px\";\r\n");
      out.write("         	                     btn.style.alignSelf = \"flex-end\";\r\n");
      out.write("         	                     btn.style.marginRight = \"6px\";\r\n");
      out.write("         	                     btn.innerText = \"확인\";\r\n");
      out.write("         	                     btn.setAttribute(\"onclick\", \"modify()\");\r\n");
      out.write("         	                     target.appendChild(btn);\r\n");
      out.write("         	                }\r\n");
      out.write("     	        	 		// else item has content\r\n");
      out.write("         	                else {\r\n");
      out.write("         	                    if(fromID != document.getElementById(\"inputItem\").getAttribute(\"name\")) {\r\n");
      out.write("         	                        modify();\r\n");
      out.write("         	                        \r\n");
      out.write("         	                        var target = document.getElementById(fromID);\r\n");
      out.write("         	                         var inputItem = document.createElement(\"textarea\");\r\n");
      out.write("         	                         var text = \"\";\r\n");
      out.write("         	                         \r\n");
      out.write("         	                         // get item content\r\n");
      out.write("         	                         text = target.innerText + e.key;\r\n");
      out.write("         	                         target.innerText = \"\";\r\n");
      out.write("         	                         beforeContent = text.substring(0, text.length-1);\r\n");
      out.write("         	                         \r\n");
      out.write("         	                         // user can modify item content\r\n");
      out.write("         	                         inputItem.setAttribute(\"type\", \"text\");\r\n");
      out.write("         	                         inputItem.style.width = \"90%\";\r\n");
      out.write("         	                         inputItem.style.height = \"90%\";\r\n");
      out.write("         	                         inputItem.style.display = \"flex\";\r\n");
      out.write("         	                         inputItem.setAttribute(\"id\", \"inputItem\");\r\n");
      out.write("         	                         inputItem.setAttribute(\"name\", fromID);\r\n");
      out.write("         	                         inputItem.setAttribute(\"rows\", 1);\r\n");
      out.write("         	                         inputItem.setAttribute(\"cols\", 10);\r\n");
      out.write("         	                         \r\n");
      out.write("         	                         target.appendChild(inputItem);\r\n");
      out.write("         	                         inputItem.focus();\r\n");
      out.write("         	                         inputItem.value = text;\r\n");
      out.write("         	                         \r\n");
      out.write("         	                         // user can finish modifying with button\r\n");
      out.write("         	                         var btn = document.createElement(\"button\");\r\n");
      out.write("         	                         btn.setAttribute(\"id\", \"inputBtn\");\r\n");
      out.write("         	                         btn.setAttribute(\"type\", \"button\");\r\n");
      out.write("         	                         btn.style.width = \"50px\";\r\n");
      out.write("         	                         btn.style.height = \"30px\";\r\n");
      out.write("         	                         btn.style.alignSelf = \"flex-end\";\r\n");
      out.write("         	                         btn.style.marginRight = \"6px\";\r\n");
      out.write("         	                         btn.innerText = \"확인\";\r\n");
      out.write("         	                         btn.setAttribute(\"onclick\", \"modify()\");\r\n");
      out.write("         	                         target.appendChild(btn);\r\n");
      out.write("         	                    }\r\n");
      out.write("         	                }\r\n");
      out.write("     	         }\r\n");
      out.write("    		  }\r\n");
      out.write("\r\n");
      out.write("    	  }\r\n");
      out.write("      });\r\n");
      out.write("     \r\n");
      out.write("      // 실시간 반영이 되긴하는데 for문 낭비가 심함\r\n");
      out.write("      // 크기조절 빠르게하고 다른 item으로 넘어가면 안됨\r\n");
      out.write("      // if target is item\r\n");
      out.write("      // save start width, height\r\n");
      out.write("       function mouseDown(e) {\r\n");
      out.write("    	  if(isMyMap) {\r\n");
      out.write("    	         var item = document.getElementById(e.target.id);\r\n");
      out.write("    	         if(e.target.className == \"item\") {\r\n");
      out.write("    	              itemWidth = item.offsetWidth + \"px\";\r\n");
      out.write("    	              itemHeight = item.offsetHeight + \"px\";\r\n");
      out.write("    	              //alert(itemWidth + \"   \" + itemHeight);\r\n");
      out.write("    	              \r\n");
      out.write("    	              itemSizeFlag = true;\r\n");
      out.write("    	              mouseDownItem = document.getElementById(e.target.id);\r\n");
      out.write("    	         }\r\n");
      out.write("    	  }\r\n");
      out.write("     }\r\n");
      out.write("      \r\n");
      out.write("      // if before item size and after item size is different\r\n");
      out.write("      //   re-draw item's line\r\n");
      out.write("      //   update item width, height DB\r\n");
      out.write("      function mouseUp(e) { \r\n");
      out.write("    	  if(isMyMap) {\r\n");
      out.write("    	         var tmpID = fromID;\r\n");
      out.write("    	         var id = e.target.id;\r\n");
      out.write("    	         var item = document.getElementById(id);\r\n");
      out.write("    	         //var beforeWidth = itemWidth;\r\n");
      out.write("    	         //var beforeHeight = itemHeight;\r\n");
      out.write("    	         var afterWidth = item.offsetWidth + \"px\";\r\n");
      out.write("    	         var afterHeight = item.offsetHeight + \"px\";\r\n");
      out.write("\r\n");
      out.write("    	         //var beforeWH = \"itemWidth='\"+beforeWidth+\"', itemHeight='\"+beforeHeight+\"'\";\r\n");
      out.write("    	         var afterWH = \"itemWidth='\"+afterWidth+\"', itemHeight='\"+afterHeight+\"'\";\r\n");
      out.write("    	         //alert(afterWidth + \"   \" + afterHeight);\r\n");
      out.write("    	         \r\n");
      out.write("    	        //saveFlag = true;\r\n");
      out.write("\r\n");
      out.write("    	        // if before item size and after item size is different\r\n");
      out.write("    	        if(afterWidth != itemWidth || afterHeight != itemHeight) {\r\n");
      out.write("    	            e.preventDefault();\r\n");
      out.write("    	            \r\n");
      out.write("    	            var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("    	            var toId = \"To\" + id;\r\n");
      out.write("    	            var line;\r\n");
      out.write("\r\n");
      out.write("    	            for (var i=0; i<lines.length; i++) {\r\n");
      out.write("    	              if(lines[i].id.indexOf(toId) != -1) {\r\n");
      out.write("    	                fromID = lines[i].id.substring(0, lines[i].id.indexOf(\"To\"));\r\n");
      out.write("    	                toID = lines[i].id.substring(lines[i].id.indexOf(\"To\")+2, lines[i].id.length);\r\n");
      out.write("    	                line = document.getElementById(lines[i].id);\r\n");
      out.write("    	                break;\r\n");
      out.write("    	              }\r\n");
      out.write("    	            }\r\n");
      out.write("\r\n");
      out.write("    	            // re-draw item's line\r\n");
      out.write("    	            if(line != null) {\r\n");
      out.write("    	                line.remove();\r\n");
      out.write("    	                drawLine(fromID, toID);\r\n");
      out.write("    	            }\r\n");
      out.write("    	            fromID = tmpID;\r\n");
      out.write("    	            \r\n");
      out.write("        	        itemWidth = item.offsetWidth + \"px\";\r\n");
      out.write("        	        itemHeight = item.offsetHeight + \"px\";\r\n");
      out.write("        	        \r\n");
      out.write("        	        // update item width, height DB\r\n");
      out.write("        	        sql = \"update item set \"+afterWH+\" where itemID='\"+item.id+\"' and userID='\"+userID+\"'\";;\r\n");
      out.write("        	        itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("        	        saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("        	        $.ajax({\r\n");
      out.write("        	           url: \"saveItemAction.jsp\",\r\n");
      out.write("        	           type: \"post\",\r\n");
      out.write("        	           cache: false,\r\n");
      out.write("        	           data: saveActionForm,\r\n");
      out.write("        	           dataType: \"html\",\r\n");
      out.write("        	           success: function(data) {\r\n");
      out.write("        	        	   //console.log(\"success\");\r\n");
      out.write("        	              //console.log(data);\r\n");
      out.write("        	           },\r\n");
      out.write("        	           error: function (request, status, error) {\r\n");
      out.write("        	              console.log(error);\r\n");
      out.write("        	           }\r\n");
      out.write("        	        });\r\n");
      out.write("        	        itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("        	        lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("    	        }\r\n");
      out.write("    	        \r\n");
      out.write("    	        itemSizeFlag = false;\r\n");
      out.write("    	  }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      // limit itemSize\r\n");
      out.write("      function svgMouseUp(e) { \r\n");
      out.write("    	  if(itemSizeFlag) {\r\n");
      out.write("	          var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("	          var toId = \"To\" + mouseDownItem.id;\r\n");
      out.write("	          var line;\r\n");
      out.write("	          var tmpFromID = fromID;\r\n");
      out.write("\r\n");
      out.write("	          for (var i=0; i<lines.length; i++) {\r\n");
      out.write("	            if(lines[i].id.indexOf(toId) != -1) {\r\n");
      out.write("	              fromID = lines[i].id.substring(0, lines[i].id.indexOf(\"To\"));\r\n");
      out.write("	              toID = lines[i].id.substring(lines[i].id.indexOf(\"To\")+2, lines[i].id.length);\r\n");
      out.write("	              line = document.getElementById(lines[i].id);\r\n");
      out.write("	              break;\r\n");
      out.write("	            }\r\n");
      out.write("	          }\r\n");
      out.write("\r\n");
      out.write("	          // re-draw item's line\r\n");
      out.write("	          if(line != null) {\r\n");
      out.write("	              line.remove();\r\n");
      out.write("	              drawLine(fromID, toID);\r\n");
      out.write("	          }\r\n");
      out.write("    		  \r\n");
      out.write("    		  mouseDownItem.style.width = \"200px\";\r\n");
      out.write("    		  mouseDownItem.style.height = \"200px\";\r\n");
      out.write("    		  \r\n");
      out.write("    		  var afterWH = \"itemWidth='200px', itemHeight='200px'\";\r\n");
      out.write("    	      sql = \"update item set \"+afterWH+\" where itemID='\"+mouseDownItem.id+\"' and userID='\"+userID+\"'\";;\r\n");
      out.write("    	      itemSql.setAttribute(\"value\", sql);\r\n");
      out.write("    	      saveActionForm = $(\"#saveActionForm\").serialize();\r\n");
      out.write("    	      $.ajax({\r\n");
      out.write("    	         url: \"saveItemAction.jsp\",\r\n");
      out.write("    	         type: \"post\",\r\n");
      out.write("    	         cache: false,\r\n");
      out.write("    	         data: saveActionForm,\r\n");
      out.write("    	         dataType: \"html\",\r\n");
      out.write("    	         success: function(data) {\r\n");
      out.write("    	        	 //console.log(\"success\");\r\n");
      out.write("    	             //console.log(data);\r\n");
      out.write("    	         },\r\n");
      out.write("    	         error: function (request, status, error) {\r\n");
      out.write("    	            console.log(error);\r\n");
      out.write("    	         }\r\n");
      out.write("    	      });\r\n");
      out.write("    	      itemSql.setAttribute(\"value\", \"\");\r\n");
      out.write("    	      lineSql.setAttribute(\"value\", \"\");\r\n");
      out.write("    	      \r\n");
      out.write("        	  // change selected item\r\n");
      out.write("        	  console.log(\"fromID: \" + tmpFromID);\r\n");
      out.write("              if(tmpFromID == \"\") {\r\n");
      out.write("                  var after = document.getElementById(mouseDownItem.id);\r\n");
      out.write("                  after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("              }\r\n");
      out.write("              else if(mouseDownItem.id != tmpFromID) {\r\n");
      out.write("                  var before = document.getElementById(tmpFromID);\r\n");
      out.write("                  before.style.border = \"2px solid #828282\";\r\n");
      out.write("\r\n");
      out.write("                  var after = document.getElementById(mouseDownItem.id);\r\n");
      out.write("                  after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("              }\r\n");
      out.write("              \r\n");
      out.write("              fromID = mouseDownItem.id;\r\n");
      out.write("              lastItemX = getX(mouseDownItem.id);\r\n");
      out.write("              lastItemY = getY(mouseDownItem.id);\r\n");
      out.write("              lastItemW = getW(mouseDownItem.id);\r\n");
      out.write("              lastItemH = getH(mouseDownItem.id);\r\n");
      out.write("              \r\n");
      out.write("    	  }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      /*\r\n");
      out.write("      function contextmenu explain\r\n");
      out.write("      on item or grades right click event change selected item\r\n");
      out.write("      prevent page overflow\r\n");
      out.write("      show different contextmenu by item, grades\r\n");
      out.write("      Hide contextmenu\r\n");
      out.write("      */\r\n");
      out.write("      // on item right click event change selected item\r\n");
      out.write("      function contextmenu(e) {\r\n");
      out.write("    	  e.preventDefault(); // 원래 있던 오른쪽 마우스 이벤트를 무효화한다.\r\n");
      out.write("    	  \r\n");
      out.write("          var afterID = \"\";\r\n");
      out.write("          if(fromID == \"\") {\r\n");
      out.write("              var after = document.getElementById(e.target.id);\r\n");
      out.write("              after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("          }\r\n");
      out.write("          else if(e.target.id != fromID) {\r\n");
      out.write("              var before = document.getElementById(fromID);\r\n");
      out.write("              before.style.border = \"2px solid #828282\";\r\n");
      out.write("\r\n");
      out.write("              var after = document.getElementById(e.target.id);\r\n");
      out.write("              after.style.border = \"2px solid #93c9eb\";\r\n");
      out.write("              \r\n");
      out.write("              afterID = e.target.id;\r\n");
      out.write("          }\r\n");
      out.write("           \r\n");
      out.write("          afterID = e.target.id;\r\n");
      out.write("          fromID = afterID;\r\n");
      out.write("          lastItemX = getX(e.target.id);\r\n");
      out.write("          lastItemY = getY(e.target.id);\r\n");
      out.write("          lastItemW = getW(e.target.id);\r\n");
      out.write("          lastItemH = getH(e.target.id);\r\n");
      out.write("    	  \r\n");
      out.write("	   	  //Get window size:\r\n");
      out.write("	   	  var winWidth = $(document).width();\r\n");
      out.write("	   	  var winHeight = $(document).height();\r\n");
      out.write("	   	  //Get pointer position:\r\n");
      out.write("	   	  var posX = e.pageX;\r\n");
      out.write("	   	  var posY = e.pageY;\r\n");
      out.write("	   	  //Get contextmenu size:\r\n");
      out.write("	      var menuWidth;\r\n");
      out.write("	      var menuHeight;\r\n");
      out.write("	      \r\n");
      out.write("	      if(e.target.className == \"grades\") {\r\n");
      out.write("	    	  menuWidth = $(\"#gradesContext\").width();\r\n");
      out.write("	    	  menuHeight = $(\"#gradesContext\").height();\r\n");
      out.write("	      }\r\n");
      out.write("	      else {\r\n");
      out.write("	    	  menuWidth = $(\".contextmenu\").width();\r\n");
      out.write("	    	  menuHeight = $(\".contextmenu\").height();\r\n");
      out.write("	      }\r\n");
      out.write("	   	  //Security margin:\r\n");
      out.write("	   	  var secMargin = 10;\r\n");
      out.write("	   	  //Prevent page overflow:\r\n");
      out.write("	   	  if(posX + menuWidth + secMargin >= winWidth\r\n");
      out.write("	   	  && posY + menuHeight + secMargin >= winHeight){\r\n");
      out.write("	   	    //Case 1: right-bottom overflow:\r\n");
      out.write("	   	    posLeft = posX - menuWidth - secMargin + \"px\";\r\n");
      out.write("	   	    posTop = posY - menuHeight - secMargin + \"px\";\r\n");
      out.write("	   	  }\r\n");
      out.write("	   	  else if(posX + menuWidth + secMargin >= winWidth){\r\n");
      out.write("	   	    //Case 2: right overflow:\r\n");
      out.write("	   	    posLeft = posX - menuWidth - secMargin + \"px\";\r\n");
      out.write("	   	    posTop = posY + secMargin + \"px\";\r\n");
      out.write("	   	  }\r\n");
      out.write("	   	  else if(posY + menuHeight + secMargin >= winHeight){\r\n");
      out.write("	   	    //Case 3: bottom overflow:\r\n");
      out.write("	   	    posLeft = posX + secMargin + \"px\";\r\n");
      out.write("	   	    posTop = posY - menuHeight - secMargin + \"px\";\r\n");
      out.write("	      }\r\n");
      out.write("	      else {\r\n");
      out.write("	        //Case 4: default values:\r\n");
      out.write("	   	    posLeft = posX + secMargin + \"px\";\r\n");
      out.write("	   	    posTop = posY + secMargin + \"px\";\r\n");
      out.write("	   	  };\r\n");
      out.write("	   	  \r\n");
      out.write("	   	  // show different contextmenu by item, grades\r\n");
      out.write("	      if(e.target.className == \"grades\") {\r\n");
      out.write("		   	  $(\"#gradesContext\").css({\r\n");
      out.write("			   	 \"left\": posLeft,\r\n");
      out.write("			   	 \"top\": posTop\r\n");
      out.write("			  }).show();\r\n");
      out.write("		   	  $(\".contextmenu\").hide();\r\n");
      out.write("	      }\r\n");
      out.write("	      else {\r\n");
      out.write("		   	  $(\".contextmenu\").css({\r\n");
      out.write("		   		 \"left\": posLeft,\r\n");
      out.write("			   	 \"top\": posTop\r\n");
      out.write("			  }).show();\r\n");
      out.write("		   	  $(\"#gradesContext\").hide();\r\n");
      out.write("	      }\r\n");
      out.write("\r\n");
      out.write("      }\r\n");
      out.write("   	  //Hide contextmenu:\r\n");
      out.write("	  $(document).click(function(){\r\n");
      out.write("    	  $(\".contextmenu\").hide();\r\n");
      out.write("    	  $(\"#gradesContext\").hide();\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      // position and show all hidden lines\r\n");
      out.write("      function drawAllLines() {\r\n");
      out.write("          var lines = document.getElementsByClassName(\"itemLines\");\r\n");
      out.write("          var lineIDs = [];\r\n");
      out.write("          var from;\r\n");
      out.write("          var to;\r\n");
      out.write("           for (var i=0; i<lines.length; i++) {   \r\n");
      out.write("        	   lineIDs.push(lines[i].id);\r\n");
      out.write("               //console.log(\"from,to: \" + from + \", \" + to);\r\n");
      out.write("               //console.log(\"line.id: \" + line.id);\r\n");
      out.write("           }\r\n");
      out.write("           for(var i=0; i<lineIDs.length; i++) {\r\n");
      out.write("        	   //console.log(\"length: \" + lineIDs.length);\r\n");
      out.write("        	   //console.log(lineIDs[i]);\r\n");
      out.write("        	   \r\n");
      out.write("        	   line = document.getElementById(lineIDs[i]);\r\n");
      out.write("        	   line.remove();\r\n");
      out.write("        	   \r\n");
      out.write("        	   from = lineIDs[i].substring(0, lineIDs[i].indexOf(\"To\"));\r\n");
      out.write("        	   to = lineIDs[i].substring(lineIDs[i].indexOf(\"To\")+2, lineIDs[i].length);\r\n");
      out.write("        	   //console.log(from);\r\n");
      out.write("        	   //console.log(to);\r\n");
      out.write("        	   drawLine(from, to);\r\n");
      out.write("           }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      // position all items by each monitor\r\n");
      out.write("      function positionItems() {\r\n");
      out.write("    	  var top;\r\n");
      out.write("    	  var left;\r\n");
      out.write("    	  if((mainBox.offsetWidth/2 - 365) < 1843) {\r\n");
      out.write("    		  left = 1843 - (mainBox.offsetWidth/2 - 365);\r\n");
      out.write("    	  }\r\n");
      out.write("    	  else if((mainBox.offsetWidth/2 - 365) > 1843) {\r\n");
      out.write("    		  left = (mainBox.offsetWidth/2 - 365) - 1843;\r\n");
      out.write("    	  }\r\n");
      out.write("    	  else {\r\n");
      out.write("    		  left = 0;\r\n");
      out.write("    	  }\r\n");
      out.write("    	  \r\n");
      out.write("    	  if((mainBox.offsetHeight/2 - 205) < 1875) {\r\n");
      out.write("    		  top = 1875 - (mainBox.offsetHeight/2 - 205);\r\n");
      out.write("    	  }\r\n");
      out.write("    	  else if((mainBox.offsetHeight/2 - 205) > 1875) {\r\n");
      out.write("    		  top = (mainBox.offsetHeight/2 - 205) - 1875;\r\n");
      out.write("    	  }\r\n");
      out.write("    	  else {\r\n");
      out.write("    		  top = 0;\r\n");
      out.write("    	  }\r\n");
      out.write("    	  //console.log(top + \" \" + left);\r\n");
      out.write("    	  \r\n");
      out.write("          var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("           for (var i=0; i<items.length; i++) {\r\n");
      out.write("               var item = document.getElementById(items[i].id);\r\n");
      out.write("               var itemTop = item.style.top;\r\n");
      out.write("               var itemLeft = item.style.left;\r\n");
      out.write("               \r\n");
      out.write("               var tmpTop = parseFloat(itemTop.substring(0, itemTop.length-2)) - top;\r\n");
      out.write("               var tmpLeft = parseFloat(itemLeft.substring(0, itemLeft.length-2)) - left\r\n");
      out.write("               //console.log(tmpTop + \" \" + tmpLeft);\r\n");
      out.write("               \r\n");
      out.write("               item.style.top = tmpTop + \"px\";\r\n");
      out.write("               item.style.left = tmpLeft + \"px\";\r\n");
      out.write("           }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      // check all showing items and grades if they have New APP items\r\n");
      out.write("      // if have New APP item show like \"1 New!!\" text up-side of it\r\n");
      out.write("      function checkNewItems() {\r\n");
      out.write("    	  var len = itemAppList.length;\r\n");
      out.write("    	  //console.log(itemAppList);\r\n");
      out.write("    	  for(var i=0; i<len; i++) {\r\n");
      out.write("    		  //console.log(itemAppList[i]);\r\n");
      out.write("    		  //console.log(itemAppList[i].substring(0, itemAppList[i].indexOf(\"_\")));\r\n");
      out.write("    		  var key = itemAppList[i].substring(0, itemAppList[i].indexOf(\"_\"));\r\n");
      out.write("    		  if(key in itemAppDict) {\r\n");
      out.write("    			  itemAppDict[key] = itemAppDict[key] + 1;\r\n");
      out.write("    		  }\r\n");
      out.write("    		  else {\r\n");
      out.write("    			  itemAppDict[key] = 1;\r\n");
      out.write("    		  }\r\n");
      out.write("    	  }\r\n");
      out.write("    	  //console.log(\"-----------------dictStart\");\r\n");
      out.write("    	  //for (var key in itemAppDict) { console.log(\"key : \" + key +\", value : \" + itemAppDict[key]); }\r\n");
      out.write("\r\n");
      out.write("    	  \r\n");
      out.write("          var items = document.getElementsByClassName(\"item\");\r\n");
      out.write("          var backID;\r\n");
      out.write("          console.log(itemAppDict);\r\n");
      out.write("          \r\n");
      out.write("	   	   if(\"grade1\" in itemAppDict) {\r\n");
      out.write("	   		   const newDiv = document.createElement('div');\r\n");
      out.write("	   		   console.log(\"grade1\");\r\n");
      out.write("	   		   var grade1 = document.getElementById(\"grade1\")\r\n");
      out.write("	           newDiv.setAttribute(\"class\", \"new\");\r\n");
      out.write("	           newDiv.setAttribute(\"id\", \"grade1New\");\r\n");
      out.write("	           newDiv.style.top = parseFloat(grade1.style.top.substring(0, grade1.style.top.length-2)) - 25 + \"px\";\r\n");
      out.write("	           newDiv.style.left = grade1.style.left;\r\n");
      out.write("	           newDiv.innerText = itemAppDict[\"grade1\"] + \"New!!\";\r\n");
      out.write("	           \r\n");
      out.write("	           mainBox.appendChild(newDiv);\r\n");
      out.write("			   delete itemAppDict['grade1'];\r\n");
      out.write("		   }\r\n");
      out.write("		   if(\"grade2\" in itemAppDict) {\r\n");
      out.write("			   const newDiv = document.createElement('div');\r\n");
      out.write("			   console.log(\"grade2\");\r\n");
      out.write("	   		   var grade2 = document.getElementById(\"grade2\")\r\n");
      out.write("	           newDiv.setAttribute(\"class\", \"new\");\r\n");
      out.write("	           newDiv.setAttribute(\"id\", \"grade2New\");\r\n");
      out.write("	           newDiv.style.top = parseFloat(grade2.style.top.substring(0, grade2.style.top.length-2)) - 25 + \"px\";\r\n");
      out.write("	           newDiv.style.left = grade2.style.left;\r\n");
      out.write("	           newDiv.innerText = itemAppDict[\"grade2\"] + \"New!!\";\r\n");
      out.write("	           \r\n");
      out.write("	           mainBox.appendChild(newDiv);\r\n");
      out.write("			   delete itemAppDict['grade2'];\r\n");
      out.write("		   }\r\n");
      out.write("		   if(\"grade3\" in itemAppDict) {\r\n");
      out.write("			   const newDiv = document.createElement('div');\r\n");
      out.write("			   console.log(\"grade3\");\r\n");
      out.write("	   		   var grade3 = document.getElementById(\"grade3\")\r\n");
      out.write("	           newDiv.setAttribute(\"class\", \"new\");\r\n");
      out.write("	           newDiv.setAttribute(\"id\", \"grade3New\");\r\n");
      out.write("	           newDiv.style.top = parseFloat(grade3.style.top.substring(0, grade3.style.top.length-2)) - 25 + \"px\";\r\n");
      out.write("	           newDiv.style.left = grade3.style.left;\r\n");
      out.write("	           newDiv.innerText = itemAppDict[\"grade3\"] + \"New!!\";\r\n");
      out.write("	           \r\n");
      out.write("	           mainBox.appendChild(newDiv);\r\n");
      out.write("			   delete itemAppDict['grade3'];\r\n");
      out.write("		   }\r\n");
      out.write("		   if(\"grade4\" in itemAppDict) {\r\n");
      out.write("			   const newDiv = document.createElement('div');\r\n");
      out.write("			   console.log(\"grade4\");\r\n");
      out.write("	   		   var grade4 = document.getElementById(\"grade4\")\r\n");
      out.write("	           newDiv.setAttribute(\"class\", \"new\");\r\n");
      out.write("	           newDiv.setAttribute(\"id\", \"grade4New\");\r\n");
      out.write("	           newDiv.style.top = parseFloat(grade4.style.top.substring(0, grade4.style.top.length-2)) - 25 + \"px\";\r\n");
      out.write("	           newDiv.style.left = grade4.style.left;\r\n");
      out.write("	           newDiv.innerText = itemAppDict[\"grade4\"] + \"New!!\";\r\n");
      out.write("	           \r\n");
      out.write("	           mainBox.appendChild(newDiv);\r\n");
      out.write("			   delete itemAppDict['grade4'];\r\n");
      out.write("		   }\r\n");
      out.write("          \r\n");
      out.write("           for (var i=0; i<items.length; i++) {\r\n");
      out.write("        	   const newDiv = document.createElement('div');\r\n");
      out.write("        	   var item = document.getElementById(items[i].id);\r\n");
      out.write("        	   backID = item.id.substring(item.id.indexOf(\"_\")+1, item.id.length-1);\r\n");
      out.write("  	   \r\n");
      out.write("        	   if(backID in itemAppDict) {\r\n");
      out.write("    	           newDiv.setAttribute(\"class\", \"new\");\r\n");
      out.write("    	           newDiv.setAttribute(\"id\", item.id+\"New\");\r\n");
      out.write("    	           newDiv.style.top = parseFloat(item.style.top.substring(0, item.style.top.length-2)) - 25 + \"px\";\r\n");
      out.write("    	           newDiv.style.left = item.style.left;\r\n");
      out.write("    	           newDiv.innerText = itemAppDict[backID] + \"New!!\";\r\n");
      out.write("    	           \r\n");
      out.write("    	           mainBox.appendChild(newDiv);\r\n");
      out.write("        		   delete itemAppDict[backID];\r\n");
      out.write("        	   }\r\n");
      out.write("           }\r\n");
      out.write("           //console.log(\"-----------------dictEnd\");\r\n");
      out.write("           //for (var key in itemAppDict) { console.log(\"key : \" + key +\", value : \" + itemAppDict[key]); }\r\n");
      out.write("      }\r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
