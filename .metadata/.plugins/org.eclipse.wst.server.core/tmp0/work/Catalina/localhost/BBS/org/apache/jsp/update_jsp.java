/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.52
 * Generated at: 2022-05-12 08:58:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import bbs.Bbs;
import bbs.BbsDAO;
import bbs.Notice;
import bbs.NoticeDAO;
import bbs.Studyboard;
import bbs.StudyboardDAO;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("bbs.Bbs");
    _jspx_imports_classes.add("bbs.Notice");
    _jspx_imports_classes.add("bbs.BbsDAO");
    _jspx_imports_classes.add("bbs.NoticeDAO");
    _jspx_imports_classes.add("bbs.StudyboardDAO");
    _jspx_imports_classes.add("bbs.Studyboard");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\r\n");
      out.write("김영원: CSS\r\n");
      out.write("서동학: 전체적인 코딩\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <title>글수정</title>\r\n");
      out.write("\r\n");
      out.write("  <link href=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.js\"></script>\r\n");
      out.write("  <script src=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <link href=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.1/summernote.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.1/summernote.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <style>\r\n");
      out.write("	@font-face {\r\n");
      out.write("	  font-family: \"aTitleGothic2\";\r\n");
      out.write("	  src: url('fonts/aTitleGothic2.ttf');\r\n");
      out.write("	}\r\n");
      out.write("	@font-face {\r\n");
      out.write("	  font-family: \"aTitleGothic3\";\r\n");
      out.write("	  src: url('fonts/aTitleGothic3.ttf');\r\n");
      out.write("	}\r\n");
      out.write("	@font-face {\r\n");
      out.write("	  font-family: \"uninote\";\r\n");
      out.write("	  src: url('fonts/UNINOTE.otf');\r\n");
      out.write("	}\r\n");
      out.write("  \r\n");
      out.write("    html, body {\r\n");
      out.write("      height: 100%;\r\n");
      out.write("      margin: 0px;\r\n");
      out.write("      background-color: #f9f9f9;\r\n");
      out.write("    }\r\n");
      out.write("  \r\n");
      out.write("    a {\r\n");
      out.write("      color: black;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    a.underline:hover {\r\n");
      out.write("      text-decoration: underline;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    ul {\r\n");
      out.write("      list-style: none;\r\n");
      out.write("      padding-left: 0px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .main_box {\r\n");
      out.write("      width: 1000px;\r\n");
      out.write("      margin: 0 auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top_box {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: space-between;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .home {\r\n");
      out.write("      font-size: 40px;\r\n");
      out.write("      margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .home a {\r\n");
      out.write("      font-size: 50px;\r\n");
      out.write("      color: #93c9eb;\r\n");
      out.write("      margin: 10px 10px 10xp auto;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      font-weight: 700;\r\n");
      out.write("      font-family: uninote;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .text_box {\r\n");
      out.write("      resize: none;\r\n");
      out.write("      width: 700px;\r\n");
      out.write("      height: 300px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .title {\r\n");
      out.write("      margin-bottom: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .button_box {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .submit_button {\r\n");
      out.write("      margin-right: 20px;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  ");

    String category = request.getParameter("category");
    String userID = null;
    
    // if user logged-in
    if(session.getAttribute("userID") != null) {
       userID = (String) session.getAttribute("userID");
    }
    // if user not logged-in
    if(userID == null) {
       PrintWriter script = response.getWriter();
       script.println("<script>");
       script.println("alert('로그인을 하세요.')");
       script.println("location.href = 'login.jsp'");
       script.println("</script>");
    }
    
    int bbsID = 0;
    // get bbsID (PK)
    if(request.getParameter("bbsID") != null) {
       bbsID = Integer.parseInt(request.getParameter("bbsID"));
    }
    if(bbsID == 0) {
       PrintWriter script = response.getWriter();
       script.println("<script>");
       script.println("alert('유효하지 않은 글입니다.')");
       script.println("location.href = '"+ category + ".jsp'");
       script.println("</script>");
    }
    
    Bbs bbs = new BbsDAO().getBbs(bbsID);
    Notice notice = new NoticeDAO().getNotice(bbsID);
    Studyboard studyboard = new StudyboardDAO().getStudyboard(bbsID);
    // check if modify and not my post
    if(category.equals("notice")) {
       if(!userID.equals(bbs.getUserID())) {
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("alert('권한이 없습니다.')");
          script.println("location.href = 'notice.jsp'");
          script.println("</script>");
       }
    }
    if(category.equals("noticeAdmin")) {
       if(!userID.equals(notice.getUserID())) {
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("alert('권한이 없습니다.')");
          script.println("location.href = 'noticeAdmin.jsp'");
          script.println("</script>");
       }
    }
    if(category.equals("studyboard")) {
       if(!userID.equals(studyboard.getUserID())) {
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("alert('권한이 없습니다.')");
          script.println("location.href = 'studyboard.jsp'");
          script.println("</script>");
       }
    }
  
      out.write("\r\n");
      out.write("  <div class=\"main_box\">\r\n");
      out.write("    <div class=\"top_box\">\r\n");
      out.write("      <div class=\"home\">\r\n");
      out.write("		<p style=\"margin:0;\"><a href='home.jsp'><img src=\"img/LogoColor.png\" alt=\"no image\" height=\"50\" style=\"vertical-align: middle;\"><span style=\"vertical-align: middle;\">UNINOTE</span></a></p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <form method=\"post\" action=\"updateAction.jsp?category=");
      out.print(category );
      out.write("&bbsID=");
      out.print( bbsID );
      out.write("\">\r\n");
      out.write("      <div class=\"write_box\">\r\n");
      out.write("        ");

        // show title box by category
        if(category.equals("notice")){ 
        
      out.write("\r\n");
      out.write("        제목 : <input class=\"title\" type=\"text\" name=\"bbsTitle\" placeholder=");
      out.print( bbs.getBbsTitle() );
      out.write(" size=\"80\" maxlength=\"50\">\r\n");
      out.write("        <p><textarea id=\"summernote\" name=\"bbsContent\">");
      out.print( bbs.getBbsContent() );
      out.write("</textarea></p>\r\n");
      out.write("        ");

        } 
        if(category.equals("noticeAdmin")) {
        
      out.write("\r\n");
      out.write("        제목 : <input class=\"title\" type=\"text\" name=\"bbsTitle\" placeholder=");
      out.print( notice.getNoticeTitle() );
      out.write(" size=\"80\" maxlength=\"50\">\r\n");
      out.write("        <p><textarea id=\"summernote\" name=\"bbsContent\">");
      out.print( notice.getNoticeContent() );
      out.write("</textarea></p>\r\n");
      out.write("        ");

        }
        if(category.equals("studyboard")) {
        
      out.write("\r\n");
      out.write("        제목 : <input class=\"title\" type=\"text\" name=\"bbsTitle\" placeholder=");
      out.print( studyboard.getStudyboardTitle() );
      out.write(" size=\"80\" maxlength=\"50\">\r\n");
      out.write("        <p><textarea id=\"summernote\" name=\"bbsContent\">");
      out.print(studyboard.getStudyboardContent() );
      out.write("</textarea></p>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("     </div>\r\n");
      out.write("     \r\n");
      out.write("      <div class=\"button_box\">\r\n");
      out.write("        <input class=\"submit_button\" type=\"submit\" value=\"수정\">\r\n");
      out.write("        <input class=\"cancle_button\" type=\"button\" value=\"취소\" onClick=\"history.go(-1)\">\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("  	// make text-area box\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("      $('#summernote').summernote({\r\n");
      out.write("        height: 300,\r\n");
      out.write("        minHeight: null,\r\n");
      out.write("        maxHeight: null,\r\n");
      out.write("        focus: true,\r\n");
      out.write("        lang: \"ko-KR\",\r\n");
      out.write("        placeholder: '최대 2048자까지 쓸 수 있습니다',\r\n");
      out.write("        toolbar: [\r\n");
      out.write("          ['fontname', ['fontname']],\r\n");
      out.write("          ['fontsize', ['fontsize']],\r\n");
      out.write("          ['style', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],\r\n");
      out.write("          ['color', ['forecolor', 'color']],\r\n");
      out.write("          ['table', ['table']],\r\n");
      out.write("          ['para', ['ul', 'ol', 'paragraph']],\r\n");
      out.write("          ['height', ['height']],\r\n");
      out.write("          ['insert', ['link']],\r\n");
      out.write("          ['view', ['fullscreen', 'help']]\r\n");
      out.write("        ],\r\n");
      out.write("        fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', '맑은 고딕', '궁서', '굴림체', '굴림', '돋움체', '바탕체'],\r\n");
      out.write("        fontSizes: ['8', '9', '10', '11', '12', '14', '16', '18', '20', '22', '24', '28', '30', '36']\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      $(\"#summernote\").on(\"summernote.enter\", function(we, e) {\r\n");
      out.write("              $(this).summernote(\"pasteHTML\", \"<br><br>\");\r\n");
      out.write("              e.preventDefault();\r\n");
      out.write("            });\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
